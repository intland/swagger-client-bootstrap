/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;
import okio.ByteString;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerTypeSelector(com.intland.swagger.client.model.AbstractBackgroundJobStatusInfo.class, new TypeSelector<com.intland.swagger.client.model.AbstractBackgroundJobStatusInfo>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.AbstractBackgroundJobStatusInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DefaultBackgroundJobStatusInfo", com.intland.swagger.client.model.DefaultBackgroundJobStatusInfo.class);
                        classByDiscriminatorValue.put("DependencyFinderJobStatusInfo", com.intland.swagger.client.model.DependencyFinderJobStatusInfo.class);
                        classByDiscriminatorValue.put("AbstractBackgroundJobStatusInfo", com.intland.swagger.client.model.AbstractBackgroundJobStatusInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.AbstractField.class, new TypeSelector<com.intland.swagger.client.model.AbstractField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.AbstractField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ArtifactReferenceField", com.intland.swagger.client.model.ArtifactReferenceField.class);
                        classByDiscriminatorValue.put("BoolField", com.intland.swagger.client.model.BoolField.class);
                        classByDiscriminatorValue.put("ColorField", com.intland.swagger.client.model.ColorField.class);
                        classByDiscriminatorValue.put("CountryField", com.intland.swagger.client.model.CountryField.class);
                        classByDiscriminatorValue.put("DateField", com.intland.swagger.client.model.DateField.class);
                        classByDiscriminatorValue.put("DecimalField", com.intland.swagger.client.model.DecimalField.class);
                        classByDiscriminatorValue.put("DurationField", com.intland.swagger.client.model.DurationField.class);
                        classByDiscriminatorValue.put("IntegerField", com.intland.swagger.client.model.IntegerField.class);
                        classByDiscriminatorValue.put("LanguageField", com.intland.swagger.client.model.LanguageField.class);
                        classByDiscriminatorValue.put("MemberField", com.intland.swagger.client.model.MemberField.class);
                        classByDiscriminatorValue.put("OptionChoiceField", com.intland.swagger.client.model.OptionChoiceField.class);
                        classByDiscriminatorValue.put("ProjectChoiceField", com.intland.swagger.client.model.ProjectChoiceField.class);
                        classByDiscriminatorValue.put("ReferenceField", com.intland.swagger.client.model.ReferenceField.class);
                        classByDiscriminatorValue.put("RepositoryChoiceField", com.intland.swagger.client.model.RepositoryChoiceField.class);
                        classByDiscriminatorValue.put("ReviewMemberReferenceField", com.intland.swagger.client.model.ReviewMemberReferenceField.class);
                        classByDiscriminatorValue.put("TableField", com.intland.swagger.client.model.TableField.class);
                        classByDiscriminatorValue.put("TextField", com.intland.swagger.client.model.TextField.class);
                        classByDiscriminatorValue.put("TrackerChoiceField", com.intland.swagger.client.model.TrackerChoiceField.class);
                        classByDiscriminatorValue.put("TrackerItemChoiceField", com.intland.swagger.client.model.TrackerItemChoiceField.class);
                        classByDiscriminatorValue.put("UrlField", com.intland.swagger.client.model.UrlField.class);
                        classByDiscriminatorValue.put("UserChoiceField", com.intland.swagger.client.model.UserChoiceField.class);
                        classByDiscriminatorValue.put("WikiTextField", com.intland.swagger.client.model.WikiTextField.class);
                        classByDiscriminatorValue.put("AbstractField", com.intland.swagger.client.model.AbstractField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.AbstractFieldValue.class, new TypeSelector<com.intland.swagger.client.model.AbstractFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.AbstractFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BoolFieldValue", com.intland.swagger.client.model.BoolFieldValue.class);
                        classByDiscriminatorValue.put("ChoiceFieldValue", com.intland.swagger.client.model.ChoiceFieldValue.class);
                        classByDiscriminatorValue.put("ColorFieldValue", com.intland.swagger.client.model.ColorFieldValue.class);
                        classByDiscriminatorValue.put("CountryFieldValue", com.intland.swagger.client.model.CountryFieldValue.class);
                        classByDiscriminatorValue.put("DateFieldValue", com.intland.swagger.client.model.DateFieldValue.class);
                        classByDiscriminatorValue.put("DecimalFieldValue", com.intland.swagger.client.model.DecimalFieldValue.class);
                        classByDiscriminatorValue.put("DurationFieldValue", com.intland.swagger.client.model.DurationFieldValue.class);
                        classByDiscriminatorValue.put("IntegerFieldValue", com.intland.swagger.client.model.IntegerFieldValue.class);
                        classByDiscriminatorValue.put("LanguageFieldValue", com.intland.swagger.client.model.LanguageFieldValue.class);
                        classByDiscriminatorValue.put("NotSupportedFieldValue", com.intland.swagger.client.model.NotSupportedFieldValue.class);
                        classByDiscriminatorValue.put("ReferredTestStepFieldValue", com.intland.swagger.client.model.ReferredTestStepFieldValue.class);
                        classByDiscriminatorValue.put("TableFieldValue", com.intland.swagger.client.model.TableFieldValue.class);
                        classByDiscriminatorValue.put("TextFieldValue", com.intland.swagger.client.model.TextFieldValue.class);
                        classByDiscriminatorValue.put("UrlFieldValue", com.intland.swagger.client.model.UrlFieldValue.class);
                        classByDiscriminatorValue.put("WikiTextFieldValue", com.intland.swagger.client.model.WikiTextFieldValue.class);
                        classByDiscriminatorValue.put("AbstractFieldValue", com.intland.swagger.client.model.AbstractFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.AbstractOutline.class, new TypeSelector<com.intland.swagger.client.model.AbstractOutline>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.AbstractOutline> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OutlineItem", com.intland.swagger.client.model.OutlineItem.class);
                        classByDiscriminatorValue.put("OutlineWiki", com.intland.swagger.client.model.OutlineWiki.class);
                        classByDiscriminatorValue.put("AbstractOutline", com.intland.swagger.client.model.AbstractOutline.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.AbstractReference.class, new TypeSelector<com.intland.swagger.client.model.AbstractReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.AbstractReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ArtifactReference", com.intland.swagger.client.model.ArtifactReference.class);
                        classByDiscriminatorValue.put("AssociationTypeReference", com.intland.swagger.client.model.AssociationTypeReference.class);
                        classByDiscriminatorValue.put("AttachmentReference", com.intland.swagger.client.model.AttachmentReference.class);
                        classByDiscriminatorValue.put("ChoiceOptionReference", com.intland.swagger.client.model.ChoiceOptionReference.class);
                        classByDiscriminatorValue.put("CommentReference", com.intland.swagger.client.model.CommentReference.class);
                        classByDiscriminatorValue.put("DependencyEntityReference", com.intland.swagger.client.model.DependencyEntityReference.class);
                        classByDiscriminatorValue.put("FieldReference", com.intland.swagger.client.model.FieldReference.class);
                        classByDiscriminatorValue.put("ProjectBaselineReference", com.intland.swagger.client.model.ProjectBaselineReference.class);
                        classByDiscriminatorValue.put("ProjectReference", com.intland.swagger.client.model.ProjectReference.class);
                        classByDiscriminatorValue.put("ReportReference", com.intland.swagger.client.model.ReportReference.class);
                        classByDiscriminatorValue.put("RepositoryReference", com.intland.swagger.client.model.RepositoryReference.class);
                        classByDiscriminatorValue.put("RoleReference", com.intland.swagger.client.model.RoleReference.class);
                        classByDiscriminatorValue.put("SharedFieldReference", com.intland.swagger.client.model.SharedFieldReference.class);
                        classByDiscriminatorValue.put("TrackerBaselineReference", com.intland.swagger.client.model.TrackerBaselineReference.class);
                        classByDiscriminatorValue.put("TrackerItemReference", com.intland.swagger.client.model.TrackerItemReference.class);
                        classByDiscriminatorValue.put("TrackerPermissionReference", com.intland.swagger.client.model.TrackerPermissionReference.class);
                        classByDiscriminatorValue.put("TrackerReference", com.intland.swagger.client.model.TrackerReference.class);
                        classByDiscriminatorValue.put("TrackerTypeReference", com.intland.swagger.client.model.TrackerTypeReference.class);
                        classByDiscriminatorValue.put("UserGroupReference", com.intland.swagger.client.model.UserGroupReference.class);
                        classByDiscriminatorValue.put("UserReference", com.intland.swagger.client.model.UserReference.class);
                        classByDiscriminatorValue.put("WikiPageReference", com.intland.swagger.client.model.WikiPageReference.class);
                        classByDiscriminatorValue.put("WorkingSetReference", com.intland.swagger.client.model.WorkingSetReference.class);
                        classByDiscriminatorValue.put("AbstractReference", com.intland.swagger.client.model.AbstractReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.AbstractTrackerItemReference.class, new TypeSelector<com.intland.swagger.client.model.AbstractTrackerItemReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.AbstractTrackerItemReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DownstreamTrackerItemReference", com.intland.swagger.client.model.DownstreamTrackerItemReference.class);
                        classByDiscriminatorValue.put("IncomingTrackerItemAssociation", com.intland.swagger.client.model.IncomingTrackerItemAssociation.class);
                        classByDiscriminatorValue.put("OutgoingTrackerItemAssociation", com.intland.swagger.client.model.OutgoingTrackerItemAssociation.class);
                        classByDiscriminatorValue.put("UpstreamTrackerItemReference", com.intland.swagger.client.model.UpstreamTrackerItemReference.class);
                        classByDiscriminatorValue.put("AbstractTrackerItemReference", com.intland.swagger.client.model.AbstractTrackerItemReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ArtifactReference.class, new TypeSelector<com.intland.swagger.client.model.ArtifactReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ArtifactReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ArtifactReference", com.intland.swagger.client.model.ArtifactReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ArtifactReferenceField.class, new TypeSelector<com.intland.swagger.client.model.ArtifactReferenceField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ArtifactReferenceField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ArtifactReferenceField", com.intland.swagger.client.model.ArtifactReferenceField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.AssociationTypeReference.class, new TypeSelector<com.intland.swagger.client.model.AssociationTypeReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.AssociationTypeReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AssociationTypeReference", com.intland.swagger.client.model.AssociationTypeReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.AttachmentReference.class, new TypeSelector<com.intland.swagger.client.model.AttachmentReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.AttachmentReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AttachmentReference", com.intland.swagger.client.model.AttachmentReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.BoolField.class, new TypeSelector<com.intland.swagger.client.model.BoolField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.BoolField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BoolField", com.intland.swagger.client.model.BoolField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.BoolFieldValue.class, new TypeSelector<com.intland.swagger.client.model.BoolFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.BoolFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BoolFieldValue", com.intland.swagger.client.model.BoolFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ChoiceFieldValue.class, new TypeSelector<com.intland.swagger.client.model.ChoiceFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ChoiceFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ChoiceFieldValue", com.intland.swagger.client.model.ChoiceFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ChoiceOptionReference.class, new TypeSelector<com.intland.swagger.client.model.ChoiceOptionReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ChoiceOptionReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ChoiceOptionReference", com.intland.swagger.client.model.ChoiceOptionReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ColorField.class, new TypeSelector<com.intland.swagger.client.model.ColorField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ColorField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ColorField", com.intland.swagger.client.model.ColorField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ColorFieldValue.class, new TypeSelector<com.intland.swagger.client.model.ColorFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ColorFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ColorFieldValue", com.intland.swagger.client.model.ColorFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.CommentReference.class, new TypeSelector<com.intland.swagger.client.model.CommentReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.CommentReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CommentReference", com.intland.swagger.client.model.CommentReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.CountryField.class, new TypeSelector<com.intland.swagger.client.model.CountryField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.CountryField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CountryField", com.intland.swagger.client.model.CountryField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.CountryFieldValue.class, new TypeSelector<com.intland.swagger.client.model.CountryFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.CountryFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CountryFieldValue", com.intland.swagger.client.model.CountryFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DateField.class, new TypeSelector<com.intland.swagger.client.model.DateField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DateField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DateField", com.intland.swagger.client.model.DateField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DateFieldValue.class, new TypeSelector<com.intland.swagger.client.model.DateFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DateFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DateFieldValue", com.intland.swagger.client.model.DateFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DecimalField.class, new TypeSelector<com.intland.swagger.client.model.DecimalField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DecimalField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DecimalField", com.intland.swagger.client.model.DecimalField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DecimalFieldValue.class, new TypeSelector<com.intland.swagger.client.model.DecimalFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DecimalFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DecimalFieldValue", com.intland.swagger.client.model.DecimalFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DefaultBackgroundJobStatusInfo.class, new TypeSelector<com.intland.swagger.client.model.DefaultBackgroundJobStatusInfo>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DefaultBackgroundJobStatusInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DefaultBackgroundJobStatusInfo", com.intland.swagger.client.model.DefaultBackgroundJobStatusInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DependencyEntityReference.class, new TypeSelector<com.intland.swagger.client.model.DependencyEntityReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DependencyEntityReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DependencyEntityReference", com.intland.swagger.client.model.DependencyEntityReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DependencyFinderJobStatusInfo.class, new TypeSelector<com.intland.swagger.client.model.DependencyFinderJobStatusInfo>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DependencyFinderJobStatusInfo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DependencyFinderJobStatusInfo", com.intland.swagger.client.model.DependencyFinderJobStatusInfo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DownstreamTrackerItemReference.class, new TypeSelector<com.intland.swagger.client.model.DownstreamTrackerItemReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DownstreamTrackerItemReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DownstreamTrackerItemReference", com.intland.swagger.client.model.DownstreamTrackerItemReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DurationField.class, new TypeSelector<com.intland.swagger.client.model.DurationField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DurationField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DurationField", com.intland.swagger.client.model.DurationField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.DurationFieldValue.class, new TypeSelector<com.intland.swagger.client.model.DurationFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.DurationFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DurationFieldValue", com.intland.swagger.client.model.DurationFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.FieldReference.class, new TypeSelector<com.intland.swagger.client.model.FieldReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.FieldReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FieldReference", com.intland.swagger.client.model.FieldReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.IncomingTrackerItemAssociation.class, new TypeSelector<com.intland.swagger.client.model.IncomingTrackerItemAssociation>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.IncomingTrackerItemAssociation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IncomingTrackerItemAssociation", com.intland.swagger.client.model.IncomingTrackerItemAssociation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.IntegerField.class, new TypeSelector<com.intland.swagger.client.model.IntegerField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.IntegerField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IntegerField", com.intland.swagger.client.model.IntegerField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.IntegerFieldValue.class, new TypeSelector<com.intland.swagger.client.model.IntegerFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.IntegerFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IntegerFieldValue", com.intland.swagger.client.model.IntegerFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.LanguageField.class, new TypeSelector<com.intland.swagger.client.model.LanguageField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.LanguageField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("LanguageField", com.intland.swagger.client.model.LanguageField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.LanguageFieldValue.class, new TypeSelector<com.intland.swagger.client.model.LanguageFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.LanguageFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("LanguageFieldValue", com.intland.swagger.client.model.LanguageFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.MemberField.class, new TypeSelector<com.intland.swagger.client.model.MemberField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.MemberField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MemberField", com.intland.swagger.client.model.MemberField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.NotSupportedFieldValue.class, new TypeSelector<com.intland.swagger.client.model.NotSupportedFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.NotSupportedFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("NotSupportedFieldValue", com.intland.swagger.client.model.NotSupportedFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.OptionChoiceField.class, new TypeSelector<com.intland.swagger.client.model.OptionChoiceField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.OptionChoiceField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OptionChoiceField", com.intland.swagger.client.model.OptionChoiceField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.OutgoingTrackerItemAssociation.class, new TypeSelector<com.intland.swagger.client.model.OutgoingTrackerItemAssociation>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.OutgoingTrackerItemAssociation> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OutgoingTrackerItemAssociation", com.intland.swagger.client.model.OutgoingTrackerItemAssociation.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.OutlineItem.class, new TypeSelector<com.intland.swagger.client.model.OutlineItem>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.OutlineItem> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OutlineItem", com.intland.swagger.client.model.OutlineItem.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.OutlineWiki.class, new TypeSelector<com.intland.swagger.client.model.OutlineWiki>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.OutlineWiki> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OutlineWiki", com.intland.swagger.client.model.OutlineWiki.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ProjectBaselineReference.class, new TypeSelector<com.intland.swagger.client.model.ProjectBaselineReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ProjectBaselineReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProjectBaselineReference", com.intland.swagger.client.model.ProjectBaselineReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ProjectChoiceField.class, new TypeSelector<com.intland.swagger.client.model.ProjectChoiceField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ProjectChoiceField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProjectChoiceField", com.intland.swagger.client.model.ProjectChoiceField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ProjectReference.class, new TypeSelector<com.intland.swagger.client.model.ProjectReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ProjectReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProjectReference", com.intland.swagger.client.model.ProjectReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ReferenceField.class, new TypeSelector<com.intland.swagger.client.model.ReferenceField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ReferenceField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReferenceField", com.intland.swagger.client.model.ReferenceField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ReferredTestStepFieldValue.class, new TypeSelector<com.intland.swagger.client.model.ReferredTestStepFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ReferredTestStepFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReferredTestStepFieldValue", com.intland.swagger.client.model.ReferredTestStepFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ReportGroup.class, new TypeSelector<com.intland.swagger.client.model.ReportGroup>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ReportGroup> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReportGroupWithGroups", com.intland.swagger.client.model.ReportGroupWithGroups.class);
                        classByDiscriminatorValue.put("ReportGroupWithReferencedRows", com.intland.swagger.client.model.ReportGroupWithReferencedRows.class);
                        classByDiscriminatorValue.put("ReportGroupWithRows", com.intland.swagger.client.model.ReportGroupWithRows.class);
                        classByDiscriminatorValue.put("ReportGroup", com.intland.swagger.client.model.ReportGroup.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ReportGroupWithGroups.class, new TypeSelector<com.intland.swagger.client.model.ReportGroupWithGroups>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ReportGroupWithGroups> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReportGroupWithGroups", com.intland.swagger.client.model.ReportGroupWithGroups.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ReportGroupWithReferencedRows.class, new TypeSelector<com.intland.swagger.client.model.ReportGroupWithReferencedRows>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ReportGroupWithReferencedRows> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReportGroupWithReferencedRows", com.intland.swagger.client.model.ReportGroupWithReferencedRows.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ReportGroupWithRows.class, new TypeSelector<com.intland.swagger.client.model.ReportGroupWithRows>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ReportGroupWithRows> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReportGroupWithRows", com.intland.swagger.client.model.ReportGroupWithRows.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ReportReference.class, new TypeSelector<com.intland.swagger.client.model.ReportReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ReportReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReportReference", com.intland.swagger.client.model.ReportReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.RepositoryChoiceField.class, new TypeSelector<com.intland.swagger.client.model.RepositoryChoiceField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.RepositoryChoiceField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("RepositoryChoiceField", com.intland.swagger.client.model.RepositoryChoiceField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.RepositoryReference.class, new TypeSelector<com.intland.swagger.client.model.RepositoryReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.RepositoryReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("RepositoryReference", com.intland.swagger.client.model.RepositoryReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.ReviewMemberReferenceField.class, new TypeSelector<com.intland.swagger.client.model.ReviewMemberReferenceField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.ReviewMemberReferenceField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReviewMemberReferenceField", com.intland.swagger.client.model.ReviewMemberReferenceField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.RoleReference.class, new TypeSelector<com.intland.swagger.client.model.RoleReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.RoleReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("RoleReference", com.intland.swagger.client.model.RoleReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.SharedFieldReference.class, new TypeSelector<com.intland.swagger.client.model.SharedFieldReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.SharedFieldReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SharedFieldReference", com.intland.swagger.client.model.SharedFieldReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TableField.class, new TypeSelector<com.intland.swagger.client.model.TableField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TableField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TableField", com.intland.swagger.client.model.TableField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TableFieldValue.class, new TypeSelector<com.intland.swagger.client.model.TableFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TableFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TableFieldValue", com.intland.swagger.client.model.TableFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TextField.class, new TypeSelector<com.intland.swagger.client.model.TextField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TextField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TextField", com.intland.swagger.client.model.TextField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TextFieldValue.class, new TypeSelector<com.intland.swagger.client.model.TextFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TextFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TextFieldValue", com.intland.swagger.client.model.TextFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerBaselineReference.class, new TypeSelector<com.intland.swagger.client.model.TrackerBaselineReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerBaselineReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerBaselineReference", com.intland.swagger.client.model.TrackerBaselineReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerChoiceField.class, new TypeSelector<com.intland.swagger.client.model.TrackerChoiceField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerChoiceField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerChoiceField", com.intland.swagger.client.model.TrackerChoiceField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerItemAttachmentRequest.class, new TypeSelector<com.intland.swagger.client.model.TrackerItemAttachmentRequest>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerItemAttachmentRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerItemAttachmentRequest", com.intland.swagger.client.model.TrackerItemAttachmentRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerItemChange.class, new TypeSelector<com.intland.swagger.client.model.TrackerItemChange>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerItemChange> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerItemRowChange", com.intland.swagger.client.model.TrackerItemRowChange.class);
                        classByDiscriminatorValue.put("TrackerItemChange", com.intland.swagger.client.model.TrackerItemChange.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerItemChoiceField.class, new TypeSelector<com.intland.swagger.client.model.TrackerItemChoiceField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerItemChoiceField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerItemChoiceField", com.intland.swagger.client.model.TrackerItemChoiceField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerItemReference.class, new TypeSelector<com.intland.swagger.client.model.TrackerItemReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerItemReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerItemReference", com.intland.swagger.client.model.TrackerItemReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerItemRowChange.class, new TypeSelector<com.intland.swagger.client.model.TrackerItemRowChange>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerItemRowChange> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerItemRowChange", com.intland.swagger.client.model.TrackerItemRowChange.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerItemsRequest.class, new TypeSelector<com.intland.swagger.client.model.TrackerItemsRequest>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerItemsRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerItemAttachmentRequest", com.intland.swagger.client.model.TrackerItemAttachmentRequest.class);
                        classByDiscriminatorValue.put("TrackerItemsRequest", com.intland.swagger.client.model.TrackerItemsRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerPermissionReference.class, new TypeSelector<com.intland.swagger.client.model.TrackerPermissionReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerPermissionReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerPermissionReference", com.intland.swagger.client.model.TrackerPermissionReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerReference.class, new TypeSelector<com.intland.swagger.client.model.TrackerReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerReference", com.intland.swagger.client.model.TrackerReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.TrackerTypeReference.class, new TypeSelector<com.intland.swagger.client.model.TrackerTypeReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.TrackerTypeReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TrackerTypeReference", com.intland.swagger.client.model.TrackerTypeReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.UpstreamTrackerItemReference.class, new TypeSelector<com.intland.swagger.client.model.UpstreamTrackerItemReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.UpstreamTrackerItemReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UpstreamTrackerItemReference", com.intland.swagger.client.model.UpstreamTrackerItemReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.UrlField.class, new TypeSelector<com.intland.swagger.client.model.UrlField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.UrlField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UrlField", com.intland.swagger.client.model.UrlField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.UrlFieldValue.class, new TypeSelector<com.intland.swagger.client.model.UrlFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.UrlFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UrlFieldValue", com.intland.swagger.client.model.UrlFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.UserChoiceField.class, new TypeSelector<com.intland.swagger.client.model.UserChoiceField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.UserChoiceField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UserChoiceField", com.intland.swagger.client.model.UserChoiceField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.UserGroupReference.class, new TypeSelector<com.intland.swagger.client.model.UserGroupReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.UserGroupReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UserGroupReference", com.intland.swagger.client.model.UserGroupReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.UserReference.class, new TypeSelector<com.intland.swagger.client.model.UserReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.UserReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("UserReference", com.intland.swagger.client.model.UserReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.WikiPageReference.class, new TypeSelector<com.intland.swagger.client.model.WikiPageReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.WikiPageReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WikiPageReference", com.intland.swagger.client.model.WikiPageReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.WikiTextField.class, new TypeSelector<com.intland.swagger.client.model.WikiTextField>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.WikiTextField> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WikiTextField", com.intland.swagger.client.model.WikiTextField.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.WikiTextFieldValue.class, new TypeSelector<com.intland.swagger.client.model.WikiTextFieldValue>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.WikiTextFieldValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WikiTextFieldValue", com.intland.swagger.client.model.WikiTextFieldValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(com.intland.swagger.client.model.WorkingSetReference.class, new TypeSelector<com.intland.swagger.client.model.WorkingSetReference>() {
                    @Override
                    public Class<? extends com.intland.swagger.client.model.WorkingSetReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("WorkingSetReference", com.intland.swagger.client.model.WorkingSetReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AccessPermission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AccessPermissionsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ArtifactReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ArtifactReferenceField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ArtifactRevision.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ArtifactRevisionSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.Association.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AssociationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AssociationTypeReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.Attachment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AttachmentMigrationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AttachmentReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AttachmentSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AutoApplyTestStepReuses.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AutomatedTestCaseRunResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.AutomatedTestRunRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.BackgroundJob.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.BackgroundJobReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.BackgroundJobStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.BadRequestException.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.Baseline.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.BatchGetTrackerItemReviewsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.BoolField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.BoolFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.BoolFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.BulkOperationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ChoiceFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ChoiceFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ChoiceOptionReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ColorField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ColorFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ColorFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.Comment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.CommentReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.CountryField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.CountryFieldAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.CountryFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.CountryFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.CreateBaselineRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.CreateTestRunFromTestSetsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.CreateTestRunRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.CrossProjectDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DateField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DateFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DateFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DecimalField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DecimalFieldAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DecimalFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DecimalFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DefaultBackgroundJobStatusInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DependencyEntityReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DependencyEntityReferenceAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DependencyFinderJobStatusInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DependencyFinderJobStatusInfoAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DeployProject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DeploymentProjectExportSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DeploymentTrackerExportSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DownstreamTrackerItemReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DurationField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DurationFieldAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DurationFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.DurationFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ExportForDeploymentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ExportProject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.FailedOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.FieldReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.FieldReferenceAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.IncomingTrackerItemAssociation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.IntegerField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.IntegerFieldAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.IntegerFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.IntegerFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.InternalServerErrorException.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.JobReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.Label.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.LanguageField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.LanguageFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.LanguageFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.LockInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.LockRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.MaintenanceMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.MaintenanceModeProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.MemberField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.MemberFieldAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.MemberReferenceSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.NotSupportedFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.OptionChoiceField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.OptionChoiceFieldAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.OutgoingTrackerItemAssociation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.OutlineIndex.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.OutlineItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.OutlineItemAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.OutlineItemSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.OutlineWiki.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.OutlineWikiAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.PermissionIdsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.Project.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ProjectBaselineReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ProjectChoiceField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ProjectChoiceFieldAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ProjectFilteringRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ProjectMemberPermissions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ProjectReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ProjectSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReferenceField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReferenceSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReferredTestStepFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReferredTestStepFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.RemoteMigrationFile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportAggregate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportCell.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportColumn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportColumnSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportGroupWithGroups.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportGroupWithGroupsAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportGroupWithReferencedRows.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportGroupWithReferencedRowsAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportGroupWithRows.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportGroupWithRowsAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportItemReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportItemResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportPagingInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportPermission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportReferenceLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportReferenceLevelSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportReferencedRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportReferencedRowAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReportRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.RepositoryChoiceField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.RepositoryReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ResizableReportColumnSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ResourceForbiddenException.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ResourceLockedException.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ResourceNotFoundException.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ResourceUnauthorizedException.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.RestException.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.ReviewMemberReferenceField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.Role.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.RoleReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.RoleWithPermissions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.SharedFieldReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.SimpleReportSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.SystemStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TableField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TableFieldAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TableFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TableFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TestRunResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TextField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TextFieldAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TextFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TextFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TooManyRequestsException.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TraceabilityInitialLevelFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TraceabilityItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TraceabilityLevelFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TraceabilityResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.Tracker.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerBaselineReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerChoiceField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerFieldPermissions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerFieldStatusPermissions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerFieldsStatusPermissions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerFilteringRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemAttachmentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemAttachmentRequestAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemChildReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemChoiceField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemFieldAccessibility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemFieldAccessibilityList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemHistory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemHistoryRevision.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemReferenceAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemReferenceData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemReferenceSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemRelationsResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemReview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemReviewConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemReviewExport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemReviewVote.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemReviewVoteExport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemRevision.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemRowChange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemRowChangeAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemSearchRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerItemWithTrackerItemReviewsExport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerPermission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerPermissionReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerReportSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.TrackerTypeReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateTestCaseRunRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateTestRunRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateTrackerItemChildrenRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateTrackerItemField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateTrackerItemFieldWithItemId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateTrackerItemTableField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateWorkingSet500Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateWorkingSet500ResponseCause.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateWorkingSet500ResponseCauseStackTraceInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpdateWorkingSet500ResponseCauseSuppressedInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UpstreamTrackerItemReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UrlField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UrlFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UrlFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.User.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UserChoiceField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UserFilteringRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UserGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UserGroupReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UserReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UserReferenceAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UserReferenceSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.UserSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WikiOutlineSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WikiPage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WikiPageReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WikiRenderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WikiTextField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WikiTextFieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WikiTextFieldValueAllOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WorkflowTransition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WorkingSetReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WorkingSetTrackerUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.intland.swagger.client.model.WorkingSetUpdateRequest.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
