/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Request for migrating attachments
 */
@ApiModel(description = "Request for migrating attachments")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T13:51:27.016473+01:00[Europe/Budapest]")
public class AttachmentMigrationRequest {
  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private Date createdAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserReference createdBy;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * Description format of the entity
   */
  @JsonAdapter(DescriptionFormatEnum.Adapter.class)
  public enum DescriptionFormatEnum {
    PLAINTEXT("PlainText"),
    
    HTML("Html"),
    
    WIKI("Wiki");

    private String value;

    DescriptionFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DescriptionFormatEnum fromValue(String value) {
      for (DescriptionFormatEnum b : DescriptionFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DescriptionFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DescriptionFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DescriptionFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DescriptionFormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DESCRIPTION_FORMAT = "descriptionFormat";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_FORMAT)
  private DescriptionFormatEnum descriptionFormat;

  public static final String SERIALIZED_NAME_FILES = "files";
  @SerializedName(SERIALIZED_NAME_FILES)
  private List<RemoteMigrationFile> files = null;

  /**
   * Type of action made on the source files.
   */
  @JsonAdapter(MigrationActionEnum.Adapter.class)
  public enum MigrationActionEnum {
    MOVE("MOVE"),
    
    COPY("COPY");

    private String value;

    MigrationActionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MigrationActionEnum fromValue(String value) {
      for (MigrationActionEnum b : MigrationActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MigrationActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MigrationActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MigrationActionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MigrationActionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MIGRATION_ACTION = "migrationAction";
  @SerializedName(SERIALIZED_NAME_MIGRATION_ACTION)
  private MigrationActionEnum migrationAction;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modifiedAt";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private Date modifiedAt;

  public static final String SERIALIZED_NAME_MODIFIED_BY = "modifiedBy";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY)
  private UserReference modifiedBy;

  public static final String SERIALIZED_NAME_TARGET_ITEM = "targetItem";
  @SerializedName(SERIALIZED_NAME_TARGET_ITEM)
  private TrackerItemReference targetItem;


  public AttachmentMigrationRequest createdAt(Date createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date when the entity was created
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the entity was created")

  public Date getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }


  public AttachmentMigrationRequest createdBy(UserReference createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserReference getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(UserReference createdBy) {
    this.createdBy = createdBy;
  }


  public AttachmentMigrationRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the entity
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the entity")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public AttachmentMigrationRequest descriptionFormat(DescriptionFormatEnum descriptionFormat) {
    
    this.descriptionFormat = descriptionFormat;
    return this;
  }

   /**
   * Description format of the entity
   * @return descriptionFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description format of the entity")

  public DescriptionFormatEnum getDescriptionFormat() {
    return descriptionFormat;
  }


  public void setDescriptionFormat(DescriptionFormatEnum descriptionFormat) {
    this.descriptionFormat = descriptionFormat;
  }


  public AttachmentMigrationRequest files(List<RemoteMigrationFile> files) {
    
    this.files = files;
    return this;
  }

  public AttachmentMigrationRequest addFilesItem(RemoteMigrationFile filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<RemoteMigrationFile>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * List of files to migrate
   * @return files
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of files to migrate")

  public List<RemoteMigrationFile> getFiles() {
    return files;
  }


  public void setFiles(List<RemoteMigrationFile> files) {
    this.files = files;
  }


  public AttachmentMigrationRequest migrationAction(MigrationActionEnum migrationAction) {
    
    this.migrationAction = migrationAction;
    return this;
  }

   /**
   * Type of action made on the source files.
   * @return migrationAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of action made on the source files.")

  public MigrationActionEnum getMigrationAction() {
    return migrationAction;
  }


  public void setMigrationAction(MigrationActionEnum migrationAction) {
    this.migrationAction = migrationAction;
  }


  public AttachmentMigrationRequest modifiedAt(Date modifiedAt) {
    
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * The date when the entity was modified
   * @return modifiedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when the entity was modified")

  public Date getModifiedAt() {
    return modifiedAt;
  }


  public void setModifiedAt(Date modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  public AttachmentMigrationRequest modifiedBy(UserReference modifiedBy) {
    
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserReference getModifiedBy() {
    return modifiedBy;
  }


  public void setModifiedBy(UserReference modifiedBy) {
    this.modifiedBy = modifiedBy;
  }


  public AttachmentMigrationRequest targetItem(TrackerItemReference targetItem) {
    
    this.targetItem = targetItem;
    return this;
  }

   /**
   * Get targetItem
   * @return targetItem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TrackerItemReference getTargetItem() {
    return targetItem;
  }


  public void setTargetItem(TrackerItemReference targetItem) {
    this.targetItem = targetItem;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttachmentMigrationRequest attachmentMigrationRequest = (AttachmentMigrationRequest) o;
    return Objects.equals(this.createdAt, attachmentMigrationRequest.createdAt) &&
        Objects.equals(this.createdBy, attachmentMigrationRequest.createdBy) &&
        Objects.equals(this.description, attachmentMigrationRequest.description) &&
        Objects.equals(this.descriptionFormat, attachmentMigrationRequest.descriptionFormat) &&
        Objects.equals(this.files, attachmentMigrationRequest.files) &&
        Objects.equals(this.migrationAction, attachmentMigrationRequest.migrationAction) &&
        Objects.equals(this.modifiedAt, attachmentMigrationRequest.modifiedAt) &&
        Objects.equals(this.modifiedBy, attachmentMigrationRequest.modifiedBy) &&
        Objects.equals(this.targetItem, attachmentMigrationRequest.targetItem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, createdBy, description, descriptionFormat, files, migrationAction, modifiedAt, modifiedBy, targetItem);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttachmentMigrationRequest {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionFormat: ").append(toIndentedString(descriptionFormat)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    migrationAction: ").append(toIndentedString(migrationAction)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    targetItem: ").append(toIndentedString(targetItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

