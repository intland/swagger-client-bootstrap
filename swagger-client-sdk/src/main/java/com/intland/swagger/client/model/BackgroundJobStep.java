/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.io.IOException;
import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Information about a background job step
 */
@ApiModel(description = "Information about a background job step")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T14:02:21.403654+01:00[Europe/Budapest]")
public class BackgroundJobStep {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Result of a background job step
   */
  @JsonAdapter(ResultEnum.Adapter.class)
  public enum ResultEnum {
    SUCCESSFUL("SUCCESSFUL"),
    
    FAILED("FAILED");

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResultEnum fromValue(String value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResultEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResultEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResultEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResultEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RESULT = "result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private ResultEnum result;

  public static final String SERIALIZED_NAME_RESULT_MESSAGE = "resultMessage";
  @SerializedName(SERIALIZED_NAME_RESULT_MESSAGE)
  private String resultMessage;

  /**
   * Status of a background job step
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NEW("NEW"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    FINISHED("FINISHED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;


  public BackgroundJobStep id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Id of the background job step
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of the background job step")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public BackgroundJobStep name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the background job step
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the background job step")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BackgroundJobStep result(ResultEnum result) {
    
    this.result = result;
    return this;
  }

   /**
   * Result of a background job step
   * @return result
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Result of a background job step")

  public ResultEnum getResult() {
    return result;
  }


  public void setResult(ResultEnum result) {
    this.result = result;
  }


  public BackgroundJobStep resultMessage(String resultMessage) {
    
    this.resultMessage = resultMessage;
    return this;
  }

   /**
   * Result message of the background job step
   * @return resultMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Result message of the background job step")

  public String getResultMessage() {
    return resultMessage;
  }


  public void setResultMessage(String resultMessage) {
    this.resultMessage = resultMessage;
  }


  public BackgroundJobStep status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of a background job step
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of a background job step")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackgroundJobStep backgroundJobStep = (BackgroundJobStep) o;
    return Objects.equals(this.id, backgroundJobStep.id) &&
        Objects.equals(this.name, backgroundJobStep.name) &&
        Objects.equals(this.result, backgroundJobStep.result) &&
        Objects.equals(this.resultMessage, backgroundJobStep.resultMessage) &&
        Objects.equals(this.status, backgroundJobStep.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, result, resultMessage, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackgroundJobStep {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    resultMessage: ").append(toIndentedString(resultMessage)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

