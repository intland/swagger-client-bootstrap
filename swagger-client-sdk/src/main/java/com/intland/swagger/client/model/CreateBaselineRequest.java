/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateBaselineRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T13:51:27.016473+01:00[Europe/Budapest]")
public class CreateBaselineRequest {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private ProjectReference project;

  public static final String SERIALIZED_NAME_TRACKER = "tracker";
  @SerializedName(SERIALIZED_NAME_TRACKER)
  private TrackerReference tracker;


  public CreateBaselineRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of baseline
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of baseline")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CreateBaselineRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of baseline
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of baseline")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateBaselineRequest project(ProjectReference project) {
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ProjectReference getProject() {
    return project;
  }


  public void setProject(ProjectReference project) {
    this.project = project;
  }


  public CreateBaselineRequest tracker(TrackerReference tracker) {
    
    this.tracker = tracker;
    return this;
  }

   /**
   * Get tracker
   * @return tracker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TrackerReference getTracker() {
    return tracker;
  }


  public void setTracker(TrackerReference tracker) {
    this.tracker = tracker;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBaselineRequest createBaselineRequest = (CreateBaselineRequest) o;
    return Objects.equals(this.description, createBaselineRequest.description) &&
        Objects.equals(this.name, createBaselineRequest.name) &&
        Objects.equals(this.project, createBaselineRequest.project) &&
        Objects.equals(this.tracker, createBaselineRequest.tracker);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, name, project, tracker);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBaselineRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    tracker: ").append(toIndentedString(tracker)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

