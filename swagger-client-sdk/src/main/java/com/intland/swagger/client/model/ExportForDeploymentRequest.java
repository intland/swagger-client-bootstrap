/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Request export for deployment
 */
@ApiModel(description = "Request export for deployment")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T14:02:21.403654+01:00[Europe/Budapest]")
public class ExportForDeploymentRequest {
  public static final String SERIALIZED_NAME_EXPORT_FILE_NAME = "exportFileName";
  @SerializedName(SERIALIZED_NAME_EXPORT_FILE_NAME)
  private String exportFileName;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PROJECT_SETTINGS = "projectSettings";
  @SerializedName(SERIALIZED_NAME_PROJECT_SETTINGS)
  private List<DeploymentProjectExportSettings> projectSettings = null;

  public static final String SERIALIZED_NAME_SCHEMA_NAME = "schemaName";
  @SerializedName(SERIALIZED_NAME_SCHEMA_NAME)
  private String schemaName;

  public static final String SERIALIZED_NAME_SCHEMA_VERSION = "schemaVersion";
  @SerializedName(SERIALIZED_NAME_SCHEMA_VERSION)
  private String schemaVersion;


  public ExportForDeploymentRequest exportFileName(String exportFileName) {
    
    this.exportFileName = exportFileName;
    return this;
  }

   /**
   * Name of the resulting export file (without extension).
   * @return exportFileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the resulting export file (without extension).")

  public String getExportFileName() {
    return exportFileName;
  }


  public void setExportFileName(String exportFileName) {
    this.exportFileName = exportFileName;
  }


  public ExportForDeploymentRequest password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * A password that is used during the project encryption.
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A password that is used during the project encryption.")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public ExportForDeploymentRequest projectSettings(List<DeploymentProjectExportSettings> projectSettings) {
    
    this.projectSettings = projectSettings;
    return this;
  }

  public ExportForDeploymentRequest addProjectSettingsItem(DeploymentProjectExportSettings projectSettingsItem) {
    if (this.projectSettings == null) {
      this.projectSettings = new ArrayList<DeploymentProjectExportSettings>();
    }
    this.projectSettings.add(projectSettingsItem);
    return this;
  }

   /**
   * Project settings
   * @return projectSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Project settings")

  public List<DeploymentProjectExportSettings> getProjectSettings() {
    return projectSettings;
  }


  public void setProjectSettings(List<DeploymentProjectExportSettings> projectSettings) {
    this.projectSettings = projectSettings;
  }


   /**
   * Name of deployment settings schema
   * @return schemaName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of deployment settings schema")

  public String getSchemaName() {
    return schemaName;
  }




   /**
   * Version of deployment settings schema
   * @return schemaVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version of deployment settings schema")

  public String getSchemaVersion() {
    return schemaVersion;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportForDeploymentRequest exportForDeploymentRequest = (ExportForDeploymentRequest) o;
    return Objects.equals(this.exportFileName, exportForDeploymentRequest.exportFileName) &&
        Objects.equals(this.password, exportForDeploymentRequest.password) &&
        Objects.equals(this.projectSettings, exportForDeploymentRequest.projectSettings) &&
        Objects.equals(this.schemaName, exportForDeploymentRequest.schemaName) &&
        Objects.equals(this.schemaVersion, exportForDeploymentRequest.schemaVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exportFileName, password, projectSettings, schemaName, schemaVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportForDeploymentRequest {\n");
    sb.append("    exportFileName: ").append(toIndentedString(exportFileName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    projectSettings: ").append(toIndentedString(projectSettings)).append("\n");
    sb.append("    schemaName: ").append(toIndentedString(schemaName)).append("\n");
    sb.append("    schemaVersion: ").append(toIndentedString(schemaVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

