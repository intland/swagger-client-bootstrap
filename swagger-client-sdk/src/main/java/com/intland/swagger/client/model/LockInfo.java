/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Information about an artifact lock
 */
@ApiModel(description = "Information about an artifact lock")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T14:02:21.403654+01:00[Europe/Budapest]")
public class LockInfo {
  public static final String SERIALIZED_NAME_EXPIRES = "expires";
  @SerializedName(SERIALIZED_NAME_EXPIRES)
  private Boolean expires;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private UserReference user;


  public LockInfo expires(Boolean expires) {
    
    this.expires = expires;
    return this;
  }

   /**
   * Whether the lock will expire on its own, eg. if it is a soft lock
   * @return expires
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the lock will expire on its own, eg. if it is a soft lock")

  public Boolean getExpires() {
    return expires;
  }


  public void setExpires(Boolean expires) {
    this.expires = expires;
  }


  public LockInfo user(UserReference user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserReference getUser() {
    return user;
  }


  public void setUser(UserReference user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LockInfo lockInfo = (LockInfo) o;
    return Objects.equals(this.expires, lockInfo.expires) &&
        Objects.equals(this.user, lockInfo.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expires, user);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LockInfo {\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

