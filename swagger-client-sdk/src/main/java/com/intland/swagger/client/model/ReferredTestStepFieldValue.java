/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Value container of a referred test step
 */
@ApiModel(description = "Value container of a referred test step")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T13:51:27.016473+01:00[Europe/Budapest]")
public class ReferredTestStepFieldValue extends AbstractFieldValue {
  public static final String SERIALIZED_NAME_REFERRED_STEP_ID = "referredStepId";
  @SerializedName(SERIALIZED_NAME_REFERRED_STEP_ID)
  private String referredStepId;

  public static final String SERIALIZED_NAME_REFERRED_TEST_CASE_ID = "referredTestCaseId";
  @SerializedName(SERIALIZED_NAME_REFERRED_TEST_CASE_ID)
  private Integer referredTestCaseId;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public ReferredTestStepFieldValue() {
    this.type = this.getClass().getSimpleName();
  }

  public ReferredTestStepFieldValue referredStepId(String referredStepId) {
    
    this.referredStepId = referredStepId;
    return this;
  }

   /**
   * Id of the referred test step
   * @return referredStepId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Id of the referred test step")

  public String getReferredStepId() {
    return referredStepId;
  }


  public void setReferredStepId(String referredStepId) {
    this.referredStepId = referredStepId;
  }


  public ReferredTestStepFieldValue referredTestCaseId(Integer referredTestCaseId) {
    
    this.referredTestCaseId = referredTestCaseId;
    return this;
  }

   /**
   * Id of the test case where the referred test step comes
   * @return referredTestCaseId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Id of the test case where the referred test step comes")

  public Integer getReferredTestCaseId() {
    return referredTestCaseId;
  }


  public void setReferredTestCaseId(Integer referredTestCaseId) {
    this.referredTestCaseId = referredTestCaseId;
  }


  public ReferredTestStepFieldValue value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * Id of the Test Step
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of the Test Step")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReferredTestStepFieldValue referredTestStepFieldValue = (ReferredTestStepFieldValue) o;
    return Objects.equals(this.referredStepId, referredTestStepFieldValue.referredStepId) &&
        Objects.equals(this.referredTestCaseId, referredTestStepFieldValue.referredTestCaseId) &&
        Objects.equals(this.value, referredTestStepFieldValue.value) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referredStepId, referredTestCaseId, value, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReferredTestStepFieldValue {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    referredStepId: ").append(toIndentedString(referredStepId)).append("\n");
    sb.append("    referredTestCaseId: ").append(toIndentedString(referredTestCaseId)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

