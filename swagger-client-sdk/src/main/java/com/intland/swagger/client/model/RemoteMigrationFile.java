/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Objects;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.intland.swagger.client.JSON;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A file to migrate from a remote directory.
 */
@ApiModel(description = "A file to migrate from a remote directory.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-18T11:38:56.646+02:00[Europe/Budapest]")
public class RemoteMigrationFile {
  public static final String SERIALIZED_NAME_FILE_NAME = "fileName";
  @SerializedName(SERIALIZED_NAME_FILE_NAME)
  private String fileName;

  public static final String SERIALIZED_NAME_FILE_PATH = "filePath";
  @SerializedName(SERIALIZED_NAME_FILE_PATH)
  private String filePath;

  public static final String SERIALIZED_NAME_MD5SUM = "md5sum";
  @SerializedName(SERIALIZED_NAME_MD5SUM)
  private String md5sum;

  public static final String SERIALIZED_NAME_SHA512SUM = "sha512sum";
  @SerializedName(SERIALIZED_NAME_SHA512SUM)
  private String sha512sum;

  public RemoteMigrationFile() { 
  }

  public RemoteMigrationFile fileName(String fileName) {
    
    this.fileName = fileName;
    return this;
  }

   /**
   * File name of the newly created attachment.
   * @return fileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "newFile.txt", value = "File name of the newly created attachment.")

  public String getFileName() {
    return fileName;
  }


  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public RemoteMigrationFile filePath(String filePath) {
    
    this.filePath = filePath;
    return this;
  }

   /**
   * The path of the file relative to the configured migration home directory.
   * @return filePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "folder/file.txt", value = "The path of the file relative to the configured migration home directory.")

  public String getFilePath() {
    return filePath;
  }


  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }


  public RemoteMigrationFile md5sum(String md5sum) {
    
    this.md5sum = md5sum;
    return this;
  }

   /**
   * Precomputed MD5 checksum of the file.
   * @return md5sum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "f6967f92c24a8f3c4849d30c9f17e321", value = "Precomputed MD5 checksum of the file.")

  public String getMd5sum() {
    return md5sum;
  }


  public void setMd5sum(String md5sum) {
    this.md5sum = md5sum;
  }


  public RemoteMigrationFile sha512sum(String sha512sum) {
    
    this.sha512sum = sha512sum;
    return this;
  }

   /**
   * Precomputed SHA512 checksum of the file.
   * @return sha512sum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2e74ed4b0741e1fbe22d61e165c7c0dc4383a1aa5aa708291e32fff4cb189b9a5dfea7ffca2a22dcca258751cf4ad947c1c34abdf3fa2994219be394fbe40370", value = "Precomputed SHA512 checksum of the file.")

  public String getSha512sum() {
    return sha512sum;
  }


  public void setSha512sum(String sha512sum) {
    this.sha512sum = sha512sum;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteMigrationFile remoteMigrationFile = (RemoteMigrationFile) o;
    return Objects.equals(this.fileName, remoteMigrationFile.fileName) &&
        Objects.equals(this.filePath, remoteMigrationFile.filePath) &&
        Objects.equals(this.md5sum, remoteMigrationFile.md5sum) &&
        Objects.equals(this.sha512sum, remoteMigrationFile.sha512sum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileName, filePath, md5sum, sha512sum);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteMigrationFile {\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    md5sum: ").append(toIndentedString(md5sum)).append("\n");
    sb.append("    sha512sum: ").append(toIndentedString(sha512sum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fileName");
    openapiFields.add("filePath");
    openapiFields.add("md5sum");
    openapiFields.add("sha512sum");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RemoteMigrationFile
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (RemoteMigrationFile.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in RemoteMigrationFile is not found in the empty JSON string", RemoteMigrationFile.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!RemoteMigrationFile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RemoteMigrationFile` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("fileName") != null && !jsonObj.get("fileName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fileName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fileName").toString()));
      }
      if (jsonObj.get("filePath") != null && !jsonObj.get("filePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filePath").toString()));
      }
      if (jsonObj.get("md5sum") != null && !jsonObj.get("md5sum").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `md5sum` to be a primitive type in the JSON string but got `%s`", jsonObj.get("md5sum").toString()));
      }
      if (jsonObj.get("sha512sum") != null && !jsonObj.get("sha512sum").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sha512sum` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sha512sum").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RemoteMigrationFile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RemoteMigrationFile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RemoteMigrationFile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RemoteMigrationFile.class));

       return (TypeAdapter<T>) new TypeAdapter<RemoteMigrationFile>() {
           @Override
           public void write(JsonWriter out, RemoteMigrationFile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RemoteMigrationFile read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RemoteMigrationFile given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RemoteMigrationFile
  * @throws IOException if the JSON string is invalid with respect to RemoteMigrationFile
  */
  public static RemoteMigrationFile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RemoteMigrationFile.class);
  }

 /**
  * Convert an instance of RemoteMigrationFile to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

