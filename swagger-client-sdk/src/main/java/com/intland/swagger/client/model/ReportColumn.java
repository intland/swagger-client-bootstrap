/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Column definition for a report
 */
@ApiModel(description = "Column definition for a report")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T14:02:21.403654+01:00[Europe/Budapest]")
public class ReportColumn {
  public static final String SERIALIZED_NAME_COLUMN_INDEX = "columnIndex";
  @SerializedName(SERIALIZED_NAME_COLUMN_INDEX)
  private Integer columnIndex;

  public static final String SERIALIZED_NAME_COLUMN_REF = "columnRef";
  @SerializedName(SERIALIZED_NAME_COLUMN_REF)
  private String columnRef;

  public static final String SERIALIZED_NAME_COLUMN_WIDTH_PERCENTAGE = "columnWidthPercentage";
  @SerializedName(SERIALIZED_NAME_COLUMN_WIDTH_PERCENTAGE)
  private Double columnWidthPercentage;

  public static final String SERIALIZED_NAME_FIELD = "field";
  @SerializedName(SERIALIZED_NAME_FIELD)
  private FieldReference field;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;


  public ReportColumn columnIndex(Integer columnIndex) {
    
    this.columnIndex = columnIndex;
    return this;
  }

   /**
   * Column position index in the report.
   * @return columnIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Column position index in the report.")

  public Integer getColumnIndex() {
    return columnIndex;
  }


  public void setColumnIndex(Integer columnIndex) {
    this.columnIndex = columnIndex;
  }


  public ReportColumn columnRef(String columnRef) {
    
    this.columnRef = columnRef;
    return this;
  }

   /**
   * Column reference
   * @return columnRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12-1", value = "Column reference")

  public String getColumnRef() {
    return columnRef;
  }


  public void setColumnRef(String columnRef) {
    this.columnRef = columnRef;
  }


  public ReportColumn columnWidthPercentage(Double columnWidthPercentage) {
    
    this.columnWidthPercentage = columnWidthPercentage;
    return this;
  }

   /**
   * Column width in percentage
   * @return columnWidthPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "16.533667", value = "Column width in percentage")

  public Double getColumnWidthPercentage() {
    return columnWidthPercentage;
  }


  public void setColumnWidthPercentage(Double columnWidthPercentage) {
    this.columnWidthPercentage = columnWidthPercentage;
  }


  public ReportColumn field(FieldReference field) {
    
    this.field = field;
    return this;
  }

   /**
   * Get field
   * @return field
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FieldReference getField() {
    return field;
  }


  public void setField(FieldReference field) {
    this.field = field;
  }


  public ReportColumn name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Column name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Status", value = "Column name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ReportColumn type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Column type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "choice", value = "Column type")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportColumn reportColumn = (ReportColumn) o;
    return Objects.equals(this.columnIndex, reportColumn.columnIndex) &&
        Objects.equals(this.columnRef, reportColumn.columnRef) &&
        Objects.equals(this.columnWidthPercentage, reportColumn.columnWidthPercentage) &&
        Objects.equals(this.field, reportColumn.field) &&
        Objects.equals(this.name, reportColumn.name) &&
        Objects.equals(this.type, reportColumn.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columnIndex, columnRef, columnWidthPercentage, field, name, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportColumn {\n");
    sb.append("    columnIndex: ").append(toIndentedString(columnIndex)).append("\n");
    sb.append("    columnRef: ").append(toIndentedString(columnRef)).append("\n");
    sb.append("    columnWidthPercentage: ").append(toIndentedString(columnWidthPercentage)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

