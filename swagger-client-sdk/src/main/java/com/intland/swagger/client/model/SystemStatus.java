/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.io.IOException;
import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Basic properties of system status
 */
@ApiModel(description = "Basic properties of system status")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T13:51:27.016473+01:00[Europe/Budapest]")
public class SystemStatus {
  /**
   * System mode
   */
  @JsonAdapter(SystemModeEnum.Adapter.class)
  public enum SystemModeEnum {
    NORMAL("NORMAL"),
    
    MAINTENANCE("MAINTENANCE");

    private String value;

    SystemModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SystemModeEnum fromValue(String value) {
      for (SystemModeEnum b : SystemModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SystemModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SystemModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SystemModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SystemModeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SYSTEM_MODE = "systemMode";
  @SerializedName(SERIALIZED_NAME_SYSTEM_MODE)
  private SystemModeEnum systemMode;


  public SystemStatus systemMode(SystemModeEnum systemMode) {
    
    this.systemMode = systemMode;
    return this;
  }

   /**
   * System mode
   * @return systemMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "System mode")

  public SystemModeEnum getSystemMode() {
    return systemMode;
  }


  public void setSystemMode(SystemModeEnum systemMode) {
    this.systemMode = systemMode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemStatus systemStatus = (SystemStatus) o;
    return Objects.equals(this.systemMode, systemStatus.systemMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(systemMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemStatus {\n");
    sb.append("    systemMode: ").append(toIndentedString(systemMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

