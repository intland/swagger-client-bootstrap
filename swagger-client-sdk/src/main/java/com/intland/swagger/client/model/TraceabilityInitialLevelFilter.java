/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Objects;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.intland.swagger.client.JSON;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Settings to filter items
 */
@ApiModel(description = "Settings to filter items")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-18T11:38:56.646+02:00[Europe/Budapest]")
public class TraceabilityInitialLevelFilter {
  public static final String SERIALIZED_NAME_CB_Q_L = "cbQL";
  @SerializedName(SERIALIZED_NAME_CB_Q_L)
  private String cbQL;

  public static final String SERIALIZED_NAME_HISTORY_BASELINE_ID = "historyBaselineId";
  @SerializedName(SERIALIZED_NAME_HISTORY_BASELINE_ID)
  private Integer historyBaselineId;

  public static final String SERIALIZED_NAME_HISTORY_DATE = "historyDate";
  @SerializedName(SERIALIZED_NAME_HISTORY_DATE)
  private OffsetDateTime historyDate;

  public static final String SERIALIZED_NAME_SHOW_ANCESTOR_ITEMS = "showAncestorItems";
  @SerializedName(SERIALIZED_NAME_SHOW_ANCESTOR_ITEMS)
  private Boolean showAncestorItems = false;

  public static final String SERIALIZED_NAME_SHOW_DESCENDANT_ITEMS = "showDescendantItems";
  @SerializedName(SERIALIZED_NAME_SHOW_DESCENDANT_ITEMS)
  private Boolean showDescendantItems = false;

  public TraceabilityInitialLevelFilter() { 
  }

  public TraceabilityInitialLevelFilter cbQL(String cbQL) {
    
    this.cbQL = cbQL;
    return this;
  }

   /**
   * cbQL
   * @return cbQL
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "cbQL")

  public String getCbQL() {
    return cbQL;
  }


  public void setCbQL(String cbQL) {
    this.cbQL = cbQL;
  }


  public TraceabilityInitialLevelFilter historyBaselineId(Integer historyBaselineId) {
    
    this.historyBaselineId = historyBaselineId;
    return this;
  }

   /**
   * Snapshot view of given baseline
   * @return historyBaselineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Snapshot view of given baseline")

  public Integer getHistoryBaselineId() {
    return historyBaselineId;
  }


  public void setHistoryBaselineId(Integer historyBaselineId) {
    this.historyBaselineId = historyBaselineId;
  }


  public TraceabilityInitialLevelFilter historyDate(OffsetDateTime historyDate) {
    
    this.historyDate = historyDate;
    return this;
  }

   /**
   * Snapshot view of given date
   * @return historyDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Snapshot view of given date")

  public OffsetDateTime getHistoryDate() {
    return historyDate;
  }


  public void setHistoryDate(OffsetDateTime historyDate) {
    this.historyDate = historyDate;
  }


  public TraceabilityInitialLevelFilter showAncestorItems(Boolean showAncestorItems) {
    
    this.showAncestorItems = showAncestorItems;
    return this;
  }

   /**
   * Show ancestor items
   * @return showAncestorItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Show ancestor items")

  public Boolean getShowAncestorItems() {
    return showAncestorItems;
  }


  public void setShowAncestorItems(Boolean showAncestorItems) {
    this.showAncestorItems = showAncestorItems;
  }


  public TraceabilityInitialLevelFilter showDescendantItems(Boolean showDescendantItems) {
    
    this.showDescendantItems = showDescendantItems;
    return this;
  }

   /**
   * Show descendant items
   * @return showDescendantItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Show descendant items")

  public Boolean getShowDescendantItems() {
    return showDescendantItems;
  }


  public void setShowDescendantItems(Boolean showDescendantItems) {
    this.showDescendantItems = showDescendantItems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TraceabilityInitialLevelFilter traceabilityInitialLevelFilter = (TraceabilityInitialLevelFilter) o;
    return Objects.equals(this.cbQL, traceabilityInitialLevelFilter.cbQL) &&
        Objects.equals(this.historyBaselineId, traceabilityInitialLevelFilter.historyBaselineId) &&
        Objects.equals(this.historyDate, traceabilityInitialLevelFilter.historyDate) &&
        Objects.equals(this.showAncestorItems, traceabilityInitialLevelFilter.showAncestorItems) &&
        Objects.equals(this.showDescendantItems, traceabilityInitialLevelFilter.showDescendantItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cbQL, historyBaselineId, historyDate, showAncestorItems, showDescendantItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TraceabilityInitialLevelFilter {\n");
    sb.append("    cbQL: ").append(toIndentedString(cbQL)).append("\n");
    sb.append("    historyBaselineId: ").append(toIndentedString(historyBaselineId)).append("\n");
    sb.append("    historyDate: ").append(toIndentedString(historyDate)).append("\n");
    sb.append("    showAncestorItems: ").append(toIndentedString(showAncestorItems)).append("\n");
    sb.append("    showDescendantItems: ").append(toIndentedString(showDescendantItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cbQL");
    openapiFields.add("historyBaselineId");
    openapiFields.add("historyDate");
    openapiFields.add("showAncestorItems");
    openapiFields.add("showDescendantItems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("cbQL");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TraceabilityInitialLevelFilter
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (TraceabilityInitialLevelFilter.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in TraceabilityInitialLevelFilter is not found in the empty JSON string", TraceabilityInitialLevelFilter.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TraceabilityInitialLevelFilter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TraceabilityInitialLevelFilter` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TraceabilityInitialLevelFilter.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("cbQL") != null && !jsonObj.get("cbQL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cbQL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cbQL").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TraceabilityInitialLevelFilter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TraceabilityInitialLevelFilter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TraceabilityInitialLevelFilter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TraceabilityInitialLevelFilter.class));

       return (TypeAdapter<T>) new TypeAdapter<TraceabilityInitialLevelFilter>() {
           @Override
           public void write(JsonWriter out, TraceabilityInitialLevelFilter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TraceabilityInitialLevelFilter read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TraceabilityInitialLevelFilter given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TraceabilityInitialLevelFilter
  * @throws IOException if the JSON string is invalid with respect to TraceabilityInitialLevelFilter
  */
  public static TraceabilityInitialLevelFilter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TraceabilityInitialLevelFilter.class);
  }

 /**
  * Convert an instance of TraceabilityInitialLevelFilter to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

