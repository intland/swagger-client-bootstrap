/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Reference to a child item in the tracker outline.
 */
@ApiModel(description = "Reference to a child item in the tracker outline.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T14:02:21.403654+01:00[Europe/Budapest]")
public class TrackerItemChildReference {
  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_ITEM_REFERENCE = "itemReference";
  @SerializedName(SERIALIZED_NAME_ITEM_REFERENCE)
  private TrackerItemReference itemReference;


  public TrackerItemChildReference index(Integer index) {
    
    this.index = index;
    return this;
  }

   /**
   * Ordinal in the tracker outline.
   * minimum: 0
   * @return index
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "0", required = true, value = "Ordinal in the tracker outline.")

  public Integer getIndex() {
    return index;
  }


  public void setIndex(Integer index) {
    this.index = index;
  }


  public TrackerItemChildReference itemReference(TrackerItemReference itemReference) {
    
    this.itemReference = itemReference;
    return this;
  }

   /**
   * Get itemReference
   * @return itemReference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public TrackerItemReference getItemReference() {
    return itemReference;
  }


  public void setItemReference(TrackerItemReference itemReference) {
    this.itemReference = itemReference;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrackerItemChildReference trackerItemChildReference = (TrackerItemChildReference) o;
    return Objects.equals(this.index, trackerItemChildReference.index) &&
        Objects.equals(this.itemReference, trackerItemChildReference.itemReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(index, itemReference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrackerItemChildReference {\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    itemReference: ").append(toIndentedString(itemReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

