/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.model;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A transition in the workflow
 */
@ApiModel(description = "A transition in the workflow")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-13T14:02:21.403654+01:00[Europe/Budapest]")
public class WorkflowTransition {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * Description format of the entity
   */
  @JsonAdapter(DescriptionFormatEnum.Adapter.class)
  public enum DescriptionFormatEnum {
    PLAINTEXT("PlainText"),
    
    HTML("Html"),
    
    WIKI("Wiki");

    private String value;

    DescriptionFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DescriptionFormatEnum fromValue(String value) {
      for (DescriptionFormatEnum b : DescriptionFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DescriptionFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DescriptionFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DescriptionFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DescriptionFormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DESCRIPTION_FORMAT = "descriptionFormat";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_FORMAT)
  private DescriptionFormatEnum descriptionFormat;

  public static final String SERIALIZED_NAME_FROM_STATUS = "fromStatus";
  @SerializedName(SERIALIZED_NAME_FROM_STATUS)
  private ChoiceOptionReference fromStatus;

  public static final String SERIALIZED_NAME_HIDDEN = "hidden";
  @SerializedName(SERIALIZED_NAME_HIDDEN)
  private Boolean hidden;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private List<AccessPermission> permissions = null;

  public static final String SERIALIZED_NAME_TO_STATUS = "toStatus";
  @SerializedName(SERIALIZED_NAME_TO_STATUS)
  private ChoiceOptionReference toStatus;


  public WorkflowTransition description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the entity
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the entity")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public WorkflowTransition descriptionFormat(DescriptionFormatEnum descriptionFormat) {
    
    this.descriptionFormat = descriptionFormat;
    return this;
  }

   /**
   * Description format of the entity
   * @return descriptionFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description format of the entity")

  public DescriptionFormatEnum getDescriptionFormat() {
    return descriptionFormat;
  }


  public void setDescriptionFormat(DescriptionFormatEnum descriptionFormat) {
    this.descriptionFormat = descriptionFormat;
  }


  public WorkflowTransition fromStatus(ChoiceOptionReference fromStatus) {
    
    this.fromStatus = fromStatus;
    return this;
  }

   /**
   * Get fromStatus
   * @return fromStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ChoiceOptionReference getFromStatus() {
    return fromStatus;
  }


  public void setFromStatus(ChoiceOptionReference fromStatus) {
    this.fromStatus = fromStatus;
  }


  public WorkflowTransition hidden(Boolean hidden) {
    
    this.hidden = hidden;
    return this;
  }

   /**
   * Indicator if the transition is hidden
   * @return hidden
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicator if the transition is hidden")

  public Boolean getHidden() {
    return hidden;
  }


  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }


  public WorkflowTransition id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Id of the entity
   * minimum: 0
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of the entity")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public WorkflowTransition name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the entity
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the entity")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public WorkflowTransition permissions(List<AccessPermission> permissions) {
    
    this.permissions = permissions;
    return this;
  }

  public WorkflowTransition addPermissionsItem(AccessPermission permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<AccessPermission>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Access permissions of the transition
   * @return permissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Access permissions of the transition")

  public List<AccessPermission> getPermissions() {
    return permissions;
  }


  public void setPermissions(List<AccessPermission> permissions) {
    this.permissions = permissions;
  }


  public WorkflowTransition toStatus(ChoiceOptionReference toStatus) {
    
    this.toStatus = toStatus;
    return this;
  }

   /**
   * Get toStatus
   * @return toStatus
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ChoiceOptionReference getToStatus() {
    return toStatus;
  }


  public void setToStatus(ChoiceOptionReference toStatus) {
    this.toStatus = toStatus;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowTransition workflowTransition = (WorkflowTransition) o;
    return Objects.equals(this.description, workflowTransition.description) &&
        Objects.equals(this.descriptionFormat, workflowTransition.descriptionFormat) &&
        Objects.equals(this.fromStatus, workflowTransition.fromStatus) &&
        Objects.equals(this.hidden, workflowTransition.hidden) &&
        Objects.equals(this.id, workflowTransition.id) &&
        Objects.equals(this.name, workflowTransition.name) &&
        Objects.equals(this.permissions, workflowTransition.permissions) &&
        Objects.equals(this.toStatus, workflowTransition.toStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, descriptionFormat, fromStatus, hidden, id, name, permissions, toStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowTransition {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionFormat: ").append(toIndentedString(descriptionFormat)).append("\n");
    sb.append("    fromStatus: ").append(toIndentedString(fromStatus)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    toStatus: ").append(toIndentedString(toStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

