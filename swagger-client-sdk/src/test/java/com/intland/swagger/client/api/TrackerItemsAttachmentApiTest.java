/*
 * codebeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.intland.swagger.client.api;

import java.io.File;
import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import com.intland.swagger.client.ApiException;
import com.intland.swagger.client.model.Attachment;
import com.intland.swagger.client.model.AttachmentSearchResult;
import com.intland.swagger.client.model.TrackerItemAttachmentRequest;

/**
 * API tests for TrackerItemsAttachmentApi
 */
@Ignore
public class TrackerItemsAttachmentApiTest {

    private final TrackerItemsAttachmentApi api = new TrackerItemsAttachmentApi();

    
    /**
     * Delete attachment of tracker item by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTrackerItemAttachmentTest() throws ApiException {
        Integer itemId = null;
        Integer attachmentId = null;
        Attachment response = api.deleteTrackerItemAttachment(itemId, attachmentId);

        // TODO: test validations
    }
    
    /**
     * Delete attachments of tracker item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTrackerItemAttachmentsTest() throws ApiException {
        Integer itemId = null;
        api.deleteTrackerItemAttachments(itemId);

        // TODO: test validations
    }
    
    /**
     * Get attachment of tracker item by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTrackerItemAttachmentTest() throws ApiException {
        Integer itemId = null;
        Integer attachmentId = null;
        Attachment response = api.getTrackerItemAttachment(itemId, attachmentId);

        // TODO: test validations
    }
    
    /**
     * Get content of an attachment of tracker item by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTrackerItemAttachmentContentTest() throws ApiException {
        Integer itemId = null;
        Integer attachmentId = null;
        File response = api.getTrackerItemAttachmentContent(itemId, attachmentId);

        // TODO: test validations
    }
    
    /**
     * Get attachments of a tracker item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTrackerItemAttachmentContentsTest() throws ApiException {
        Integer itemId = null;
        File response = api.getTrackerItemAttachmentContents(itemId);

        // TODO: test validations
    }
    
    /**
     * Get attachments of tracker item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTrackerItemAttachmentsTest() throws ApiException {
        Integer itemId = null;
        String fileName = null;
        AttachmentSearchResult response = api.getTrackerItemAttachments(itemId, fileName);

        // TODO: test validations
    }
    
    /**
     * Get attachments of tracker items matching the extension or mime type filters
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTrackerItemsAttachmentContentsTest() throws ApiException {
        TrackerItemAttachmentRequest trackerItemAttachmentRequest = null;
        File response = api.getTrackerItemsAttachmentContents(trackerItemAttachmentRequest);

        // TODO: test validations
    }
    
    /**
     * Update content of attachment of tracker item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAttachmentOfTrackerItemTest() throws ApiException {
        Integer itemId = null;
        Integer attachmentId = null;
        String description = null;
        String descriptionFormat = null;
        File content = null;
        Attachment response = api.updateAttachmentOfTrackerItem(itemId, attachmentId, description, descriptionFormat, content);

        // TODO: test validations
    }
    
    /**
     * Upload an attachment to a tracker item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updloadTrackerItemAttachmentTest() throws ApiException {
        Integer itemId = null;
        File attachments = null;
        List<Attachment> response = api.updloadTrackerItemAttachment(itemId, attachments);

        // TODO: test validations
    }
    
}
