{
    "openapi": "3.0.1",
    "info": {
        "title": "codebeamer swagger API",
        "description": "",
        "contact": {
            "name": "codeBeamer",
            "url": "https://codebeamer.com"
        },
        "version": "3.0"
    },
    "externalDocs": {
        "description": "Swagger V3 Examples",
        "url": "https://codebeamer.com/cb/wiki/11375767"
    },
    "servers": [
        {
            "url": "http://localhost:8080/cb/api"
        }
    ],
    "security": [
        {
            "BasicAuth": [
                
            ],
            "BearerAuth": [
                
            ],
            "ApiKeyAuth": [
                
            ]
        }
    ],
    "paths": {
        "/v3/attachments/{attachmentId}/content": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Get content of an attachment by id",
                "operationId": "getAttachmentContent",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment by id",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / Attachment not found",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Update attachment",
                "operationId": "updateAttachment",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAttachment"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Updated attachment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/attachments/{attachmentId}": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Get attachment by id",
                "operationId": "getAttachment",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / Attachment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Deletes an attachment",
                "operationId": "deleteAttachment",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment deleted"
                    },
                    "404": {
                        "description": "Attachment not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/attachments/{attachmentId}/history": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Returns the change history of the specified attachment",
                "operationId": "getAttachmentHistory",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactRevisionSearchResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/attachments/{attachmentId}/restore": {
            "put": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Restore attachment to previous version",
                "operationId": "restoreAttachment",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Restored attachment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/associations/types/{associationTypeId}": {
            "get": {
                "tags": [
                    "Association"
                ],
                "summary": "Get association type by id",
                "operationId": "getAssociationType",
                "parameters": [
                    {
                        "name": "associationTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Association type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssociationType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Association not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/associations": {
            "post": {
                "tags": [
                    "Association"
                ],
                "summary": "Create a new association",
                "operationId": "createAssociation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Association"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Created association",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Association"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/associations/{associationId}": {
            "get": {
                "tags": [
                    "Association"
                ],
                "summary": "Get an association by id",
                "operationId": "getAssociation",
                "parameters": [
                    {
                        "name": "associationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Association not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Found association",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Association"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Association"
                ],
                "summary": "Update association settings",
                "operationId": "updateAssociation",
                "parameters": [
                    {
                        "name": "associationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Association"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated association",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Association"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Association not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Association"
                ],
                "summary": "Delete association",
                "operationId": "deleteAssociation",
                "parameters": [
                    {
                        "name": "associationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Association not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Delete association by id"
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/associations/types": {
            "get": {
                "tags": [
                    "Association"
                ],
                "summary": "Get available association types",
                "operationId": "getAvailableAssociationTypes",
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of association types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AssociationType"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/associations/{associationId}/history": {
            "get": {
                "tags": [
                    "Association"
                ],
                "summary": "Returns the change history of the specified association",
                "operationId": "getAssociationHistory",
                "parameters": [
                    {
                        "name": "associationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Association history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactRevisionSearchResult"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Association not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/job/{jobId}": {
            "get": {
                "tags": [
                    "Background job"
                ],
                "summary": "Retrieve background job information",
                "externalDocs": {
                    "description": "Warning: This is an experimental endpoint that might be changed or removed in future.",
                    "url": "https://codebeamer.com/cb/wiki/12077512"
                },
                "operationId": "getBackgroundJob",
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Background Job Info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundJob"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/baselines": {
            "post": {
                "tags": [
                    "Baseline"
                ],
                "summary": "Create a project or tracker baseline",
                "operationId": "createBaseline",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBaselineRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project or tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Baseline created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Baseline"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required or user has no permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/deployment": {
            "post": {
                "tags": [
                    "Deployment"
                ],
                "summary": "Start a deployment process",
                "operationId": "uploadDeployment",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeploymentModel"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Deployment is executed"
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/deployment/export": {
            "post": {
                "tags": [
                    "Deployment"
                ],
                "summary": "Export projects for deployment",
                "operationId": "exportForDeployment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExportForDeploymentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Export job has been scheduled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundJobReference"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/{projectId}/members": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get all members of a project",
                "operationId": "getMembersOfProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Project is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Member by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MemberReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/{projectId}/members/{userId}/permissions": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get all roles the user has on a project",
                "operationId": "getProjectRolesOfMember",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectMemberPermissions"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project or User is not found / User is not a member of the project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/migration/attachment": {
            "post": {
                "tags": [
                    "Migration"
                ],
                "summary": "Migrate attachments",
                "description": "An endpoint for migrating attachments from a preconfigured source directory.",
                "operationId": "migrateAttachments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachmentMigrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Attachments are migrated"
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/deploy": {
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Deploy a project configuration to a Project",
                "description": "The configuration file needs to be uploaded to codebeamer Documents",
                "operationId": "deployConfiguration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeployProject"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Error when deploying the project configuration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project or configuration file not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Project configuration deployed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get projects",
                "operationId": "getProjects",
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Projects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectReference"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/search": {
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Search projects by given criteria",
                "operationId": "searchProjects",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectFilteringRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "One page of projects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectSearchResult"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/{projectId}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get project",
                "operationId": "getProjectById",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/{projectId}/wikipages": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get wiki pages of a project",
                "operationId": "getTopLevelWikiPages",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "ID of the project",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "The project does not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The list of wiki pages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WikiOutlineSearchResult"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/{projectId}/content": {
            "post": {
                "tags": [
                    "Export"
                ],
                "summary": "Exports the specified project to a zip file",
                "operationId": "export",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExportProject"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The exported project contents in a zip file.",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error during the project export",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/reports/{reportId}": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update report settings",
                "operationId": "updateReport",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "Id of a report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SimpleReportSettings"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Updated report settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimpleReportSettings"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/reports": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Create a report",
                "operationId": "createReport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SimpleReportSettings"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Report settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimpleReportSettings"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/reports/{reportId}/results": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get a report results by id of the report",
                "operationId": "getReportById",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "Id of a report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of a report page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items a report page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Report content by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/reports/{reportId}/items": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get a report items by id of the report",
                "operationId": "getReportItemsById",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "Id of a report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of a report page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items a report page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Report items by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportItemResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get roles",
                "operationId": "getRoles",
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleReference"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/roles/{roleId}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get role",
                "operationId": "getRole",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/testcases/autoApplyStepReuses": {
            "post": {
                "tags": [
                    "Test Management"
                ],
                "summary": "Find duplicate TestSteps in a set of TestCases and converting duplicates to Reuses",
                "externalDocs": {
                    "description": "Detecting and automatically converting Test Step duplicates to Step-reuses",
                    "url": "https://codebeamer.com/cb/wiki/792788#section-Detecting+and+automatically+converting+Test+Step+duplicates+to+Step-reuses"
                },
                "operationId": "autoApplyStepReuses",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoApplyTestStepReuses"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The item-references of the modified tracker-items where duplicate Test Steps was found and converted to Reuses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackerItemReference"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/testruns/{testRunId}": {
            "put": {
                "tags": [
                    "Test run"
                ],
                "summary": "Update result of a Test Run",
                "operationId": "updateTestRunResult",
                "parameters": [
                    {
                        "name": "testRunId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTestRunRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Updated Test Run item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Test run not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{testRunTrackerId}/testruns": {
            "post": {
                "tags": [
                    "Test run"
                ],
                "summary": "Create a new test run for test cases or test sets",
                "description": "For multiple test sets please use trackers/{testRunTrackerId}/testruns/generatefromtestset endpoint.",
                "operationId": "createTestRunForTestCase",
                "parameters": [
                    {
                        "name": "testRunTrackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTestRunRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The newly created test run",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{testRunTrackerId}/testruns/generatefromtestset": {
            "post": {
                "tags": [
                    "Test run"
                ],
                "summary": "Create a new test run for test cases or test sets",
                "operationId": "createTestRunForTestSets",
                "parameters": [
                    {
                        "name": "testRunTrackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTestRunFromTestSetsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The newly created test run",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestRunResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/traceability/items": {
            "post": {
                "tags": [
                    "Traceability"
                ],
                "summary": "Get initial ids",
                "description": "Get traceability initial ids!",
                "operationId": "getTraceabilityInitialItemIds",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNo",
                        "in": "query",
                        "description": "Index of the result page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TraceabilityInitialLevelFilter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tracker item list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TraceabilityItem"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/traceability/relations": {
            "post": {
                "tags": [
                    "Traceability"
                ],
                "summary": "Get traceability level item ids",
                "description": "Get traceability item ids!",
                "operationId": "getTraceabilityLevelItemIds",
                "parameters": [
                    {
                        "name": "itemsOnLevel",
                        "in": "query",
                        "description": "Number of items per level.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "itemsFromPreviousItem",
                        "in": "query",
                        "description": "Number of items per item.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TraceabilityLevelFilter"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Traceability items list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TraceabilityResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/fields/{fieldId}/options": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get the options of a choice field of tracker",
                "operationId": "getChoiceOptions",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Options",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No option found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/fields/{fieldId}/options/{optionId}": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get option of a choice field of tracker",
                "operationId": "getChoiceOption",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Option by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChoiceOptionReference"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/fields/{fieldId}": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get field of tracker",
                "operationId": "getTrackerField",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Field by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AbstractField"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Field not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/schema": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get the schema of a tracker",
                "operationId": "getTrackerSchema",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Field definitions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AbstractField"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Field not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/fields": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get fields of tracker",
                "operationId": "getTrackerFields",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Field references",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FieldReference"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Field not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/fields/{fieldId}/permissions": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get permissions of tracker field",
                "operationId": "getTrackerFieldPermissions",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "statusId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions by status and role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackerFieldStatusPermissions"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Status id is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker or field not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/fields/permissions": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get permissions of all fields of a tracker",
                "operationId": "getTrackerFieldsPermissions",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "statusId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Permissions by status and role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerFieldsStatusPermissions"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Status id is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/attachments/{attachmentId}/content": {
            "get": {
                "tags": [
                    "Tracker item's attachment"
                ],
                "summary": "Get content of an attachment of tracker item by id",
                "operationId": "getTrackerItemAttachmentContent",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / Attachment not found",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Attachment of tracker item by id",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tracker item's attachment"
                ],
                "summary": "Update content of attachment of tracker item",
                "operationId": "updateAttachmentOfTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAttachment"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Updated attachment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item or attachment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/attachments/{attachmentId}": {
            "get": {
                "tags": [
                    "Tracker item's attachment"
                ],
                "summary": "Get attachment of tracker item by id",
                "operationId": "getTrackerItemAttachment",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Attachment of tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / Attachment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracker item's attachment"
                ],
                "summary": "Delete attachment of tracker item by id",
                "operationId": "deleteTrackerItemAttachment",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Attachment of tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/attachments/content": {
            "post": {
                "tags": [
                    "Tracker item's attachment"
                ],
                "summary": "Get attachments of tracker items matching the extension or mime type filters",
                "operationId": "getTrackerItemsAttachmentContents",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItemAttachmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attachments of tracker items: each tracker item goes to a subdirectory named as item-id and this directory contains the attachment files prefixed with the attachment id like [attachment-id]_[filename].",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker items not found",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/attachments": {
            "get": {
                "tags": [
                    "Tracker item's attachment"
                ],
                "summary": "Get attachments of tracker item",
                "operationId": "getTrackerItemAttachments",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "Id of the tracker item",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "Filter by part of the filename of the attachments",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Attachments of tracker item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttachmentSearchResult"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracker item's attachment"
                ],
                "summary": "Upload an attachment to a tracker item",
                "operationId": "updloadTrackerItemAttachment",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadAttachment"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Attachment of tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Attachment"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracker item's attachment"
                ],
                "summary": "Delete attachments of tracker item",
                "operationId": "deleteTrackerItemAttachments",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachments of tracker item removed"
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/attachments/content": {
            "get": {
                "tags": [
                    "Tracker item's attachment"
                ],
                "summary": "Get attachments of a tracker item",
                "operationId": "getTrackerItemAttachmentContents",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Attachments of a tracker item: contains the attachment files prefixed with the attachment id like [attachment-id]_[filename].",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/children": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get child items of a tracker item",
                "operationId": "findTrackerItemChildren",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Tracker item is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List child items of a tracker item ordered by ordinal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Replace the child item list of a tracker item",
                "operationId": "replaceChildrenOfTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "resultPageSize",
                        "in": "query",
                        "description": "Number of items in the result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTrackerItemChildrenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "First page of the new child list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Add a child item to a tracker item",
                "operationId": "addChildToTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItemRevision"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Tracker item is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Child item reference with index",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemChildReference"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Patch the child item list of a tracker item",
                "operationId": "patchChildrenOfTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "INSERT",
                                "REPLACE",
                                "REMOVE"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItemChildReference"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Tracker item is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "New child item reference on the requested index",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemChildReference"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/children": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get child items of a tracker item",
                "operationId": "findTrackerChildren",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Permission is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List child items of a tracker item ordered by ordinal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Reorder the child item list of a tracker",
                "operationId": "replaceChildrenOfTracker",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "resultPageSize",
                        "in": "query",
                        "description": "Number of items in the result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTrackerItemChildrenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "First page of the new child list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Add a child item to a tracker item",
                "operationId": "addChildToTracker",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItemRevision"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Child item reference with index",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemChildReference"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Patch the child item list of a tracker item",
                "operationId": "patchChildrenOfTracker",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "INSERT"
                            ],
                            "default": "INSERT"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItemChildReference"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Permission is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "New child item reference on the requested index",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemChildReference"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/comments": {
            "get": {
                "tags": [
                    "Tracker item's comment"
                ],
                "summary": "Get comments of tracker item",
                "operationId": "getTrackerItemComments",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "Id of a tracker item",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Comments of tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracker item's comment"
                ],
                "summary": "Comment on a tracker item",
                "operationId": "commentOnTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PostComment"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Comment of tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracker item's comment"
                ],
                "summary": "Delete comments of tracker item by item id",
                "operationId": "deleteTrackerItemComments",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Comments deleted"
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/comments/{commentId}": {
            "get": {
                "tags": [
                    "Tracker item's comment"
                ],
                "summary": "Get comment of tracker item by id",
                "operationId": "getTrackerItemComment",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Comment of tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tracker item's comment"
                ],
                "summary": "Edit comment on a tracker item",
                "operationId": "editCommentOnTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EditComment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Edited comment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracker item's comment"
                ],
                "summary": "Reply on a comment of a tracker item",
                "operationId": "replyOnCommentOfTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PostComment"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Comment of tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracker item's comment"
                ],
                "summary": "Delete comment of tracker item by id",
                "operationId": "deleteTrackerItemComment",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Comment of tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/relations": {
            "post": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get tracker items for a baseline version",
                "description": "API can be used for fetching basic information of tracker items at a specific baseline version",
                "operationId": "getBaselineTrackerItemsRelations",
                "parameters": [
                    {
                        "name": "baselineId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItemsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tracker item list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackerItemRelationsResult"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/relations": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get tracker items for a baseline version",
                "description": "API can be used for fetching basic information of tracker items at a specific baseline version",
                "operationId": "getBaselineTrackerItemRelations",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "baselineId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracker item list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemRelationsResult"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/fields": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get fields of a tracker item",
                "externalDocs": {
                    "description": "Tracker item operations",
                    "url": "https://codebeamer.com/cb/wiki/11375769"
                },
                "operationId": "getTrackerItemFields",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Tracker / Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Fields of tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemField"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Update fields of a tracker item",
                "externalDocs": {
                    "description": "Tracker item operations",
                    "url": "https://codebeamer.com/cb/wiki/11375769"
                },
                "operationId": "updateCustomFieldTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "quietMode",
                        "in": "query",
                        "description": "If it's turned on HTTP 200 with empty response indicates that the update was successful.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTrackerItemField"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Basic tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / Field not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/fields": {
            "put": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Bulk update fields of a tracker item",
                "externalDocs": {
                    "description": "Tracker item operations",
                    "url": "https://codebeamer.com/cb/wiki/11375769"
                },
                "operationId": "bulkUpdateTrackerItemFields",
                "parameters": [
                    {
                        "name": "atomic",
                        "in": "query",
                        "description": "If it's turned on the whole update will run in a single transaction.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UpdateTrackerItemFieldWithItemId"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / Field not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Bulk update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkOperationResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/fields/tables/{tableFieldId}": {
            "put": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Update table field of tracker item",
                "operationId": "updateTableFieldTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "tableFieldId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTrackerItemTableField"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Basic tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / Field not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/history": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get tracker item history",
                "description": "API can be used for fetching basic information of a tracker item",
                "operationId": "getTrackerItemHistory",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Basic tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemHistory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/lock": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Check whether a tracker item is locked, and if it is, retrieve the details of the lock",
                "operationId": "checkTrackerItemLock",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "Tracker item id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Details of the lock, or an empty response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LockInfo"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Put a soft lock on a tracker item",
                "operationId": "lockTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "Tracker item id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Requested lock configuration",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LockRequest"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, request validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not acquire lock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Lock acquired successfully"
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Unlock a tracker item",
                "operationId": "unlockTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "Tracker item id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Unlock successful"
                    },
                    "403": {
                        "description": "Could not unlock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/fields/accessibility": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get a tracker item fields accessibility",
                "operationId": "getItemAccessibility",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "Tracker item id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "targetStatusId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Accessibility returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemFieldAccessibilityList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get basic tracker item",
                "description": "API can be used for fetching basic information of a tracker item",
                "operationId": "getTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "baselineId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Basic tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Update tracker item",
                "externalDocs": {
                    "description": "Tracker item operations",
                    "url": "https://codebeamer.com/cb/wiki/11375769"
                },
                "operationId": "updateTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "referenceItemId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BEFORE",
                                "AFTER",
                                "BELOW"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItem"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Basic tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / Field not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Move tracker item to trash",
                "operationId": "deleteTrackerItem",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Basic tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/export/items": {
            "post": {
                "tags": [
                    "Export"
                ],
                "summary": "Get tracker items",
                "description": "API can be used for fetching basic information of tracker items",
                "operationId": "getTrackerItems",
                "parameters": [
                    {
                        "name": "baselineId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItemsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tracker item list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackerItem"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/query": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get tracker items by cbQL query string",
                "externalDocs": {
                    "description": "Documentation of cbQL",
                    "url": "https://codebeamer.com/cb/wiki/871101"
                },
                "operationId": "findTrackerItems",
                "parameters": [
                    {
                        "name": "baselineId",
                        "in": "query",
                        "description": "Baseline on which the queery is applied.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    },
                    {
                        "name": "queryString",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "priority='Normal'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List tracker items by cbQL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemSearchResult"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get tracker items by cbQL query string",
                "description": "API can be called with a complex cbQL string to find tracker items",
                "externalDocs": {
                    "description": "Documentation of cbQL",
                    "url": "https://codebeamer.com/cb/wiki/871101"
                },
                "operationId": "findTrackerItemsByCbQL",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItemSearchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List tracker items by cbQL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemSearchResult"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/branches/{branchId}/item": {
            "get": {
                "tags": [
                    "Branches"
                ],
                "summary": "Get tracker item on branch",
                "description": "API can be used for finding a tracker item by a branch id",
                "operationId": "getTrackerItemOnBranch",
                "parameters": [
                    {
                        "name": "sourceItemId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "branchId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Basic tracker item by id and branch id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItem"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/transitions": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get available transitions for a tracker item",
                "description": "API can be used for getting available transitions for a tracker item",
                "operationId": "getTrackerItemTransitions",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Missing user permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Available transitions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkflowTransition"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/items": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get items in a specific tracker",
                "operationId": "getItemsByTracker",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of tracker items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItemReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Create a tracker item",
                "externalDocs": {
                    "description": "Tracker item operations",
                    "url": "https://codebeamer.com/cb/wiki/11375769"
                },
                "operationId": "createTrackerItem",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parentItemId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "referenceItemId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BEFORE",
                                "AFTER",
                                "BELOW"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerItem"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Basic tracker item by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / Field not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/export/tracker-item-reviews": {
            "post": {
                "tags": [
                    "Export"
                ],
                "summary": "Get tracker item reviews by a list of tracker item IDs",
                "operationId": "batchGetTrackerItemReviews",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchGetTrackerItemReviewsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "There is no baseline accessible with the supplied ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Tracker item reviews are disabled, or access to them is denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of tracker item reviews for each tracker item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackerItemWithTrackerItemReviewsExport"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/items/{itemId}/reviews": {
            "get": {
                "tags": [
                    "Tracker item"
                ],
                "summary": "Get all Tracker Item Reviews for a particular Tracker Item",
                "operationId": "getTrackerItemReviews",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Tracker item reviews are disabled, or access to them is denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "List of tracker item reviews for the particular item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackerItemReview"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/permissions/{trackerPermissionId}": {
            "get": {
                "tags": [
                    "Tracker permission"
                ],
                "summary": "Get the immutable definition of a tracker permission",
                "operationId": "getTrackerPermission",
                "parameters": [
                    {
                        "name": "trackerPermissionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker permission.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerPermission"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/permissions": {
            "get": {
                "tags": [
                    "Tracker permission"
                ],
                "summary": "List tracker permissions per role",
                "description": "API can be used to list tracker permissions per roles, filtering is possible by user, user and on of the user's role, or just by role",
                "operationId": "getTrackerPermissionsWithRoles",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "roleId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No access permission for this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker permissions by role.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleWithPermissions"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/roles/{roleId}/permissions": {
            "put": {
                "tags": [
                    "Tracker permission"
                ],
                "summary": "Set the tracker permissions for a specific role",
                "operationId": "updatePermission",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionIdsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tracker permissions are set",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleWithPermissions"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker / permission / roles not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracker permission"
                ],
                "summary": "Removes all tracker permissions from a specific role",
                "operationId": "removePermissions",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker permissions were removed."
                    },
                    "404": {
                        "description": "Tracker/role is not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/permissions": {
            "get": {
                "tags": [
                    "Tracker permission"
                ],
                "summary": "Get available tracker permissions",
                "operationId": "getTrackerPermissions",
                "responses": {
                    "403": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker permission is not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackerPermissionReference"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/{projectId}/trackers": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get trackers",
                "operationId": "getTrackers",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project / Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Trackers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackerReference"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Create a tracker",
                "operationId": "createTracker",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "templateId",
                        "in": "query",
                        "description": "Identifier of the template tracker.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tracker"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tracker settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tracker"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required / Bad request: Tracker settings validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get tracker",
                "operationId": "getTracker",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracker",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tracker"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project / Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Updates a specific tracker",
                "operationId": "updateTracker",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tracker"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tracker settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tracker"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Deletes a tracker",
                "operationId": "deleteTracker",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracker deleted."
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/types": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get the list of tracker types",
                "operationId": "getTrackerTypes",
                "parameters": [
                    {
                        "name": "outline",
                        "in": "query",
                        "description": "Outline is enabled, disabled or any(no filtering will be applied).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ENABLED",
                                "DISABLED",
                                "ANY"
                            ],
                            "default": "ANY"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackerTypeReference"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/reports/{reportId}/results": {
            "get": {
                "tags": [
                    "Tracker report"
                ],
                "summary": "Get a report of a specific tracker",
                "operationId": "getTrackerReport",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of a report page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items a report page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Tracker / Report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/{projectId}/trackers/search": {
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Get the list of all trackers in a project",
                "operationId": "searchAllTrackersInProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerFilteringRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project / Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Trackers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerSearchResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/transitions": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get all transitions of a specific tracker",
                "operationId": "getTrackerTransitions",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fromStatusId",
                        "in": "query",
                        "description": "The from status id filter for transitions.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker transition list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkflowTransition"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/reports": {
            "get": {
                "tags": [
                    "Tracker report"
                ],
                "summary": "Get all reports of a specific tracker",
                "operationId": "getTrackerReports",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracker report reference list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReportReference"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tracker report"
                ],
                "summary": "Creates a report of a specific tracker",
                "operationId": "createTrackerReport",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerReportSettings"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tracker report settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerReportSettings"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/reports/{reportId}/items": {
            "get": {
                "tags": [
                    "Tracker report"
                ],
                "summary": "Get report items of a specific tracker view",
                "operationId": "getTrackerReportItems",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of a report page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items a report page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Tracker / Report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker report items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportItemResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/reports/{reportId}": {
            "put": {
                "tags": [
                    "Tracker report"
                ],
                "summary": "Updates a report of a specific tracker",
                "operationId": "updateTrackerReport",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrackerReportSettings"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Tracker / Report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker report settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerReportSettings"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tracker report"
                ],
                "summary": "Deletes a report of a specific tracker",
                "operationId": "deleteTrackerReport",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Tracker / Report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker report deleted."
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/outline": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get outline of a specific tracker",
                "operationId": "getTrackerOutline",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parentItemId",
                        "in": "query",
                        "description": "Show only the children of this item.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "resultDepthFilter",
                        "in": "query",
                        "description": "The depth level of the result outline.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Outline of the tracker",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OutlineItemSearchResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/baselines": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get baselines of a specific tracker",
                "operationId": "getTrackerBaselines",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Baselines of the tracker",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/{trackerId}/icon": {
            "put": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Upload a tracker icon",
                "operationId": "updateTrackerIcon",
                "parameters": [
                    {
                        "name": "trackerId",
                        "in": "path",
                        "description": "Id of the tracker",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Icon image file",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "icon": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "404": {
                        "description": "Tracker not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Tracker icon uploaded successfully"
                    },
                    "403": {
                        "description": "The tracker could not be accessed",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Could not read image from the request, or it's the wrong format",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trackers/types/{trackerTypeId}": {
            "get": {
                "tags": [
                    "Tracker"
                ],
                "summary": "Get the immutable definition of a tracker type",
                "operationId": "getTrackerType",
                "parameters": [
                    {
                        "name": "trackerTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracker type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackerType"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tracker type is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/users/groups/{groupId}/members": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get all members of a user group",
                "operationId": "getGroupMembers",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User group is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Member by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/users/groups": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get user groups",
                "operationId": "getGroups",
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User Group references",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserGroupReference"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/users/groups/{groupId}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get user group",
                "operationId": "getGroup",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User Group is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User Group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/users/findByEmail": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by email address",
                "operationId": "getUserByEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/users/search": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Search users",
                "operationId": "searchUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserFilteringRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Project is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSearchResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/users/findByName": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by name",
                "operationId": "getUserByName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/users/{userId}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get users",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "queryString",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Intland"
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserReferenceSearchResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages/{wikiId}/attachments": {
            "get": {
                "tags": [
                    "Wiki's comment"
                ],
                "summary": "Get attachment of wiki page by file name",
                "operationId": "getAttachmentByName",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment of wiki page",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wiki page / Attachment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages/{wikiId}/history": {
            "get": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Returns the change history of the specified wiki page",
                "operationId": "getWikiPageHistory",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the result page starting from 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of items in a result page. Max value: 500",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Wiki page history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactRevisionSearchResult"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages/{wikiId}/restorecontent": {
            "put": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Restores the content from a previous version of a wiki page",
                "operationId": "restoreWikiPageContent",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "description": "Wiki page id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "The version to be restored",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wiki page has been restored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WikiPage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wiki page or version not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages/{wikiId}/permissions": {
            "get": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Get permissions of a wiki page",
                "operationId": "getWikiPermissions",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "description": "Wiki page id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Permissions of the wiki page",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccessPermission"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Set permissions of a wiki page",
                "operationId": "setWikiPermissions",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "description": "Wiki page id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "recursive",
                        "in": "query",
                        "description": "Set permissions of children recursively",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPermissionsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Permissions of the wiki page",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccessPermission"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages/{itemId}": {
            "put": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Update and/or move a wiki page",
                "operationId": "updateWikiPage",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "Id of the wiki page to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Wiki page details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WikiPage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wikipage not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Properties of the updated wikipage",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WikiPage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages/{wikiId}/html": {
            "get": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Render a wiki page as HTML",
                "operationId": "renderWikiPage",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "description": "ID of the wiki page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "version of the wiki page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "The wiki page does not exist, or the artifact is not a wiki page",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The wiki content rendered as HTML",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages/{wikiId}": {
            "get": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Get wiki page",
                "operationId": "getWikiPage",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "description": "ID of the wiki page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of the wiki page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "The wiki page does not exist, or the artifact is not a wiki page",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The wiki page",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WikiPage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Delete a wiki page by its ID",
                "operationId": "deleteWikiPage",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "description": "ID of the wiki page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "The wiki page does not exist, or the artifact is not a wiki page",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The wiki page has been deleted successfully"
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages": {
            "post": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Create a new wiki page",
                "operationId": "createWikiPage",
                "requestBody": {
                    "description": "Wiki page details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WikiPage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Properties of the created wikipage",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WikiPage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/projects/{projectId}/wiki2html": {
            "post": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Render a wiki page as HTML in a specific context",
                "operationId": "renderWikiMarkup",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WikiRenderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "The wiki page does not exist, or the artifact is not a wiki page",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The wiki content rendered as HTML",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages/{wikiId}/lock": {
            "get": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Check whether a wiki page is locked, and if it is, retrieve the details of the lock",
                "operationId": "checkWikiPageLock",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "description": "Wiki page id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Details of the lock, or an empty response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LockInfo"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Lock a wiki page",
                "operationId": "lockWikiPage",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "description": "Wiki page id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Requested lock configuration",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LockRequest"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, request validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not acquire lock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Lock acquired successfully"
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Wiki"
                ],
                "summary": "Unlock a wiki page",
                "operationId": "unlockWikiPage",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "description": "Wiki page id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Unlock successful"
                    },
                    "403": {
                        "description": "Could not unlock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/wikipages/{wikiId}/comments": {
            "post": {
                "tags": [
                    "Wiki's comment"
                ],
                "summary": "Comment on a wiki page",
                "operationId": "commentOnWiki",
                "parameters": [
                    {
                        "name": "wikiId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PostComment"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Wiki page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AttachmentReference"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorException"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/system/maintenance": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get system maintenance status",
                "operationId": "getSystemStatus",
                "responses": {
                    "200": {
                        "description": "System maintenance status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemStatus"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "System"
                ],
                "summary": "Set system maintenance status",
                "operationId": "setSystemStatus",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaintenanceMode"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Request cannot be processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestException"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "System maintenance status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemStatus"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceForbiddenException"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooManyRequestsException"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AbstractBackgroundJobStatusInfo": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of status info object"
                    }
                },
                "description": "Status information of a background job",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "AbstractField": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id of a field",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of a field"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of a field"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of a field"
                    },
                    "hidden": {
                        "type": "boolean",
                        "description": "Visibility status of a field"
                    },
                    "valueModel": {
                        "type": "string",
                        "description": "Name of the updater/getter value model"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of a field"
                    },
                    "legacyRestName": {
                        "type": "string",
                        "description": "Identifier matching the legacy REST API naming"
                    },
                    "trackerItemField": {
                        "type": "string",
                        "description": "Tracker item's field name for this field"
                    },
                    "mandatoryInStatuses": {
                        "type": "array",
                        "description": "List of statuses where the field is mandatory.",
                        "items": {
                            "$ref": "#/components/schemas/ChoiceOptionReference"
                        }
                    },
                    "formula": {
                        "type": "string",
                        "description": "Formula value of a field"
                    },
                    "hideIfDependencyFormula": {
                        "type": "string",
                        "description": "Hide If dependency formula value of a field"
                    },
                    "mandatoryIfDependencyFormula": {
                        "type": "string",
                        "description": "Mandatory If dependency formula value of a field"
                    }
                },
                "description": "Abstract field",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "AbstractFieldValue": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "fieldId": {
                        "type": "integer",
                        "description": "Id of the field",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the field"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field"
                    }
                },
                "description": "Value container of a field",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "AbstractOutline": {
                "type": "object",
                "properties": {
                    "outlineIndexes": {
                        "type": "array",
                        "description": "Indexes of the entity in the outline.",
                        "items": {
                            "$ref": "#/components/schemas/OutlineIndex"
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the outline model"
                    }
                },
                "description": "Abstract outline entity",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "AbstractReference": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of a referenced object"
                    }
                },
                "description": "Reference to an item",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "AbstractTrackerItemReference": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id of the reference/association",
                        "format": "int32",
                        "example": 12142
                    },
                    "itemRevision": {
                        "$ref": "#/components/schemas/TrackerItemRevision"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the relation",
                        "example": "DownstreamTrackerItemReference"
                    }
                },
                "description": "Reference to an item",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "AccessPermission": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/RoleReference"
                    },
                    "field": {
                        "$ref": "#/components/schemas/FieldReference"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectReference"
                    },
                    "accessLevel": {
                        "type": "string",
                        "description": "Access level",
                        "enum": [
                            "NONE",
                            "READ",
                            "WRITE"
                        ]
                    }
                },
                "description": "Access permission of specific role"
            },
            "AccessPermissionsRequest": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "description": "List of access permissions.",
                        "items": {
                            "$ref": "#/components/schemas/AccessPermission"
                        }
                    }
                },
                "description": "Request model to provide permissions."
            },
            "ArtifactReference": {
                "type": "object",
                "description": "Reference to an artifact",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "ArtifactReferenceField": {
                "type": "object",
                "description": "Artifact reference field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    }
                ]
            },
            "ArtifactRevision": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version of the artifact",
                        "format": "int32"
                    },
                    "changeSummary": {
                        "type": "string",
                        "description": "Summary of the change"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    }
                },
                "description": "Model for a specific version of an artifact"
            },
            "ArtifactRevisionSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "revisions": {
                        "type": "array",
                        "description": "Found artifact revision",
                        "items": {
                            "$ref": "#/components/schemas/ArtifactRevision"
                        }
                    }
                },
                "description": "One page of artifact revisions."
            },
            "Association": {
                "required": [
                    "from"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "from": {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    "to": {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    "url": {
                        "type": "string",
                        "description": "Association to url"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AssociationTypeReference"
                    },
                    "propagatingSuspects": {
                        "type": "boolean",
                        "description": "Propagating suspects",
                        "example": true
                    },
                    "reversePropagation": {
                        "type": "boolean",
                        "description": "Reverse propagation",
                        "example": true
                    },
                    "biDirectionalPropagation": {
                        "type": "boolean",
                        "description": "Bi-directional reference",
                        "example": true
                    },
                    "propagatingDependencies": {
                        "type": "boolean",
                        "description": "Propagating dependencies",
                        "example": true
                    },
                    "baselineId": {
                        "type": "integer",
                        "description": "Baseline ID",
                        "format": "int32",
                        "example": 1
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    }
                },
                "description": "Basic properties of a codebeamer association"
            },
            "AssociationType": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    }
                },
                "description": "Basic properties of a codebeamer association type"
            },
            "AssociationTypeReference": {
                "type": "object",
                "description": "Reference to an association type",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "Attachment": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version of a attachment",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of a attachment",
                        "format": "int64"
                    },
                    "sha512": {
                        "type": "string",
                        "description": "Hash of a attachment"
                    }
                }
            },
            "AttachmentMigrationRequest": {
                "type": "object",
                "properties": {
                    "targetItem": {
                        "$ref": "#/components/schemas/TrackerItemReference"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "migrationAction": {
                        "type": "string",
                        "description": "Type of action made on the source files.",
                        "enum": [
                            "MOVE",
                            "COPY"
                        ]
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files to migrate",
                        "items": {
                            "$ref": "#/components/schemas/RemoteMigrationFile"
                        }
                    }
                },
                "description": "Request for migrating attachments"
            },
            "AttachmentReference": {
                "type": "object",
                "description": "Reference to an attachment",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "AttachmentSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Found attachments",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    }
                },
                "description": "One page of attachments."
            },
            "AutoApplyTestStepReuses": {
                "type": "object",
                "properties": {
                    "testCases": {
                        "type": "array",
                        "description": "The Test Cases to find the duplicated steps inside: if these Test Cases has duplicated Steps these will be converted to Step-Reuses.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    },
                    "scanTestCaseLibraries": {
                        "type": "boolean",
                        "description": "If it scans/finds the duplicate Steps in Test Case libraries of the user? Note: that only Reusable Steps will be reused from these libraries!"
                    }
                },
                "description": "Specifies which Test Cases are checked for duplicate Steps"
            },
            "BackgroundJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of job",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of job"
                    },
                    "backgroundJobType": {
                        "type": "string",
                        "description": "Type of a background job",
                        "enum": [
                            "RUN_IN_EXCEL",
                            "MASS_TEST_SET_RUN_CREATION",
                            "DEPENDENCY_FINDER",
                            "ITEM_EXCEL_IMPORT"
                        ]
                    },
                    "backgroundJobStatus": {
                        "type": "string",
                        "description": "Status of a background job",
                        "enum": [
                            "DRAFT",
                            "NEW",
                            "IN_PROGRESS",
                            "FINISHED"
                        ]
                    },
                    "submittedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation time of job",
                        "format": "date-time"
                    },
                    "finishedAt": {
                        "type": "string",
                        "description": "Completion time of job",
                        "format": "date-time"
                    },
                    "statusInfo": {
                        "$ref": "#/components/schemas/AbstractBackgroundJobStatusInfo"
                    }
                },
                "description": "Information about a background job"
            },
            "BackgroundJobReference": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "String id of the job"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of a background job",
                        "enum": [
                            "RUN_IN_EXCEL",
                            "MASS_TEST_SET_RUN_CREATION",
                            "DEPENDENCY_FINDER",
                            "ITEM_EXCEL_IMPORT"
                        ]
                    }
                },
                "description": "Reference to a background job"
            },
            "BadRequestException": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "resourceUri": {
                        "type": "string"
                    }
                }
            },
            "Baseline": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectReference"
                    },
                    "tracker": {
                        "$ref": "#/components/schemas/TrackerReference"
                    }
                },
                "description": "Properties of a baseline"
            },
            "BatchGetTrackerItemReviewsRequest": {
                "type": "object",
                "properties": {
                    "itemIds": {
                        "type": "array",
                        "description": "List of Tracker Item IDs",
                        "items": {
                            "type": "integer",
                            "description": "List of Tracker Item IDs",
                            "format": "int32"
                        }
                    },
                    "baselineId": {
                        "type": "integer",
                        "description": "Optional Baseline ID",
                        "format": "int32"
                    }
                },
                "description": "Request model to fetch Tracker Item Reviews for multiple Tracker Items."
            },
            "BoolField": {
                "type": "object",
                "description": "Bool field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    }
                ]
            },
            "BoolFieldValue": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "description": "Value container of a bool field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "boolean",
                                "description": "Value of the field"
                            }
                        }
                    }
                ]
            },
            "BulkOperationResponse": {
                "type": "object",
                "properties": {
                    "successfulOperationsCount": {
                        "type": "integer",
                        "description": "Count of successful operations",
                        "format": "int32"
                    },
                    "failedOperations": {
                        "type": "array",
                        "description": "List of failed operations",
                        "items": {
                            "$ref": "#/components/schemas/FailedOperation"
                        }
                    }
                },
                "description": "Holds the response of a bulk operation"
            },
            "ChoiceFieldValue": {
                "required": [
                    "type"
                ],
                "type": "object",
                "description": "Reference container of a choice option field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "values": {
                                "type": "array",
                                "description": "Values of the choice option field",
                                "items": {
                                    "$ref": "#/components/schemas/AbstractReference"
                                }
                            }
                        }
                    }
                ]
            },
            "ChoiceOptionReference": {
                "type": "object",
                "description": "Reference to a choice option",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "ColorField": {
                "type": "object",
                "description": "Color field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    }
                ]
            },
            "ColorFieldValue": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "description": "Value container of a color field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "Hex code of the color",
                                "example": "#FF0055"
                            }
                        }
                    }
                ]
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version of a comment",
                        "format": "int32"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Attachments of a comment",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "Text of a comment"
                    },
                    "commentFormat": {
                        "type": "string",
                        "description": "Format of a comment",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "parent": {
                        "$ref": "#/components/schemas/CommentReference"
                    }
                },
                "description": "Comment of a tracker item"
            },
            "CommentReference": {
                "type": "object",
                "description": "Reference to a comment of a tracker item",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "CountryField": {
                "type": "object",
                "description": "Country field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "availableOptions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "CountryFieldValue": {
                "required": [
                    "type",
                    "values"
                ],
                "type": "object",
                "description": "Value container of a country field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "values": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Country codes",
                                "items": {
                                    "type": "string",
                                    "description": "Country codes"
                                }
                            }
                        }
                    }
                ]
            },
            "CreateBaselineRequest": {
                "required": [
                    "name",
                    "project"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of baseline"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of baseline"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectReference"
                    },
                    "tracker": {
                        "$ref": "#/components/schemas/TrackerReference"
                    }
                }
            },
            "CreateTestRunFromTestSetsRequest": {
                "type": "object",
                "properties": {
                    "testSetRefs": {
                        "type": "array",
                        "description": "Test set ids to include into the test run. Only the first test set will be considered.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    },
                    "testRunModel": {
                        "$ref": "#/components/schemas/TrackerItem"
                    }
                },
                "description": "Request model to create a test run from multiple test sets"
            },
            "CreateTestRunRequest": {
                "type": "object",
                "properties": {
                    "testCaseIds": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    },
                    "testSetIds": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    },
                    "testRunModel": {
                        "$ref": "#/components/schemas/TrackerItem"
                    },
                    "testSetRefs": {
                        "type": "array",
                        "description": "Test set ids to include into the test run. Only the first test set will be considered.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    },
                    "testCaseRefs": {
                        "type": "array",
                        "description": "Test case ids to include into the test run",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    }
                },
                "description": "Request model to create a test run from multiple test cases or 1 test set"
            },
            "CrossProjectDependency": {
                "type": "object",
                "properties": {
                    "sourceProject": {
                        "$ref": "#/components/schemas/ProjectReference"
                    },
                    "targetProject": {
                        "$ref": "#/components/schemas/ProjectReference"
                    },
                    "paths": {
                        "type": "array",
                        "description": "Paths in source project where references were found to target project.",
                        "items": {
                            "type": "array",
                            "description": "Paths in source project where references were found to target project.",
                            "items": {
                                "$ref": "#/components/schemas/DependencyEntityReference"
                            }
                        }
                    }
                },
                "description": "Dependency information between two projects."
            },
            "DateField": {
                "type": "object",
                "description": "Date field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    }
                ]
            },
            "DateFieldValue": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "description": "Value container of a date field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "Date value",
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "DecimalField": {
                "type": "object",
                "description": "Decimal field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "min": {
                                "type": "number",
                                "description": "Minimum value of a field",
                                "format": "double"
                            },
                            "max": {
                                "type": "number",
                                "description": "Maximum value of a field",
                                "format": "double"
                            }
                        }
                    }
                ]
            },
            "DecimalFieldValue": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "description": "Value container of a double field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "description": "Double value",
                                "format": "double"
                            }
                        }
                    }
                ]
            },
            "DependencyEntityReference": {
                "type": "object",
                "description": "Reference to an entity in dependency path",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "typeId": {
                                "type": "integer",
                                "description": "Type ID of entity",
                                "format": "int32"
                            }
                        }
                    }
                ]
            },
            "DependencyFinderJobStatusInfo": {
                "type": "object",
                "description": "Status information of a dependency finder job",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractBackgroundJobStatusInfo"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "projectsScheduled": {
                                "type": "integer",
                                "description": "Number of projects scheduled for dependency collection",
                                "format": "int32"
                            },
                            "projectsChecked": {
                                "type": "integer",
                                "description": "Number of projects already checked for dependencies",
                                "format": "int32"
                            },
                            "dependencies": {
                                "type": "array",
                                "description": "Dependencies found among projects.",
                                "items": {
                                    "$ref": "#/components/schemas/CrossProjectDependency"
                                }
                            }
                        }
                    }
                ]
            },
            "DeployProject": {
                "type": "object",
                "properties": {
                    "project": {
                        "$ref": "#/components/schemas/ProjectReference"
                    },
                    "configurationFileId": {
                        "type": "integer",
                        "description": "Id of a codebeamer document",
                        "format": "int32"
                    },
                    "projectFileId": {
                        "type": "integer",
                        "description": "Id of a codebeamer document",
                        "format": "int32"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to decrypt the uploaded configuration file"
                    }
                }
            },
            "DeploymentModel": {
                "required": [
                    "imports"
                ],
                "type": "object",
                "properties": {
                    "imports": {
                        "type": "string",
                        "description": "Deployment files",
                        "format": "binary"
                    }
                }
            },
            "DeploymentProjectExportSettings": {
                "required": [
                    "projectId"
                ],
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "integer",
                        "description": "Project id",
                        "format": "int32"
                    },
                    "includeTrackerItems": {
                        "type": "boolean",
                        "description": "Flag if tracker items are included."
                    },
                    "includeQueries": {
                        "type": "boolean",
                        "description": "Flag if queries are included."
                    },
                    "includeTrackers": {
                        "type": "boolean",
                        "description": "Flag if trackers are included."
                    },
                    "trackers": {
                        "type": "array",
                        "description": "Tracker export settings",
                        "items": {
                            "$ref": "#/components/schemas/DeploymentTrackerExportSettings"
                        }
                    }
                },
                "description": "Project export settings for deployment"
            },
            "DeploymentTrackerExportSettings": {
                "required": [
                    "trackerId"
                ],
                "type": "object",
                "properties": {
                    "trackerId": {
                        "type": "integer",
                        "description": "Project id",
                        "format": "int32"
                    },
                    "itemsIncluded": {
                        "type": "boolean",
                        "description": "Flag if tracker items are included."
                    }
                },
                "description": "Tracker export settings for deployment"
            },
            "DownstreamTrackerItemReference": {
                "type": "object",
                "description": "Reference pointing to another item",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractTrackerItemReference"
                    }
                ]
            },
            "DurationField": {
                "type": "object",
                "description": "Duration field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "min": {
                                "type": "string",
                                "description": "Minimum value of a field"
                            },
                            "max": {
                                "type": "string",
                                "description": "Maximum value of a field"
                            }
                        }
                    }
                ]
            },
            "DurationFieldValue": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "description": "Value container of a duration field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "integer",
                                "description": "Duration value in milliseconds",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "EditComment": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "comment": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of a comment"
                    },
                    "commentFormat": {
                        "type": "string",
                        "description": "Format of a comment",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ],
                        "default": "PlainText"
                    },
                    "attachments": {
                        "type": "string",
                        "description": "Attachments of a comment",
                        "format": "binary"
                    }
                }
            },
            "ExportForDeploymentRequest": {
                "type": "object",
                "properties": {
                    "schemaName": {
                        "type": "string",
                        "description": "Name of deployment settings schema",
                        "readOnly": true
                    },
                    "schemaVersion": {
                        "type": "string",
                        "description": "Version of deployment settings schema",
                        "readOnly": true
                    },
                    "projectSettings": {
                        "type": "array",
                        "description": "Project settings",
                        "items": {
                            "$ref": "#/components/schemas/DeploymentProjectExportSettings"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "A password that is used during the project encryption."
                    },
                    "exportFileName": {
                        "type": "string",
                        "description": "Name of the resulting export file (without extension)."
                    }
                },
                "description": "Request export for deployment"
            },
            "ExportProject": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "A password that is used during the project encryption.",
                        "example": "007"
                    },
                    "skipTrackerItems": {
                        "type": "boolean",
                        "description": "If true, then the Tracker Items are not exported",
                        "default": false
                    },
                    "skipWikiPages": {
                        "type": "boolean",
                        "description": "If true, then the Wiki PAges are not exported",
                        "default": true
                    },
                    "skipAssociations": {
                        "type": "boolean",
                        "description": "If true, then the Associations are not exported",
                        "default": false
                    },
                    "skipReports": {
                        "type": "boolean",
                        "description": "If true, then the Reports are not exported",
                        "default": false
                    },
                    "selectedTrackerIds": {
                        "type": "array",
                        "description": "If this list is not empty then only the Trackers listed here are exported.",
                        "items": {
                            "type": "integer",
                            "description": "If this list is not empty then only the Trackers listed here are exported.",
                            "format": "int32"
                        }
                    }
                }
            },
            "FailedOperation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Entity id",
                        "format": "int32"
                    },
                    "exceptionMessage": {
                        "type": "string",
                        "description": "Exception message"
                    }
                },
                "description": "Holds the details of a failed operation"
            },
            "FieldReference": {
                "type": "object",
                "description": "Reference to a field of a specific tracker",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "trackerId": {
                                "type": "integer",
                                "description": "Id of the tracker",
                                "format": "int32",
                                "example": 1000
                            }
                        }
                    }
                ]
            },
            "IncomingTrackerItemAssociation": {
                "type": "object",
                "description": "Association pointing to an item",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractTrackerItemReference"
                    }
                ]
            },
            "IntegerField": {
                "type": "object",
                "description": "Integer field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "min": {
                                "type": "integer",
                                "description": "Minimum value of a field",
                                "format": "int32"
                            },
                            "max": {
                                "type": "integer",
                                "description": "Maximum value of a field",
                                "format": "int32"
                            }
                        }
                    }
                ]
            },
            "IntegerFieldValue": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "description": "Value container of a integer field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "integer",
                                "description": "Integer value",
                                "format": "int32"
                            }
                        }
                    }
                ]
            },
            "InternalServerErrorException": {
                "type": "object",
                "properties": {
                    "resourceUri": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Label": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "privateLabel": {
                        "type": "boolean",
                        "description": "Whether the label is private or not"
                    },
                    "hidden": {
                        "type": "boolean",
                        "description": "Whether the label is hidden or not"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    }
                },
                "description": "Label that is used for entities like tags.",
                "readOnly": true
            },
            "LanguageField": {
                "type": "object",
                "description": "Language field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "availableOptions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "LanguageFieldValue": {
                "required": [
                    "type",
                    "values"
                ],
                "type": "object",
                "description": "Value container of a language field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "values": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Language codes",
                                "items": {
                                    "type": "string",
                                    "description": "Language codes"
                                }
                            }
                        }
                    }
                ]
            },
            "LockInfo": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "expires": {
                        "type": "boolean",
                        "description": "Whether the lock will expire on its own, eg. if it is a soft lock"
                    }
                },
                "description": "Information about an artifact lock"
            },
            "LockRequest": {
                "type": "object",
                "properties": {
                    "hard": {
                        "type": "boolean",
                        "description": "Whether the lock should be hard"
                    },
                    "duration": {
                        "type": "string",
                        "description": "If not a hard lock, the duration specified in time notation",
                        "example": "1:30h"
                    }
                },
                "description": "Configuration to request a lock. If 'hard' is true, duration must be null, or unspecified."
            },
            "MaintenanceMode": {
                "type": "object",
                "properties": {
                    "systemMode": {
                        "type": "string",
                        "description": "System mode",
                        "enum": [
                            "NORMAL",
                            "MAINTENANCE"
                        ]
                    },
                    "properties": {
                        "$ref": "#/components/schemas/MaintenanceModeProperties"
                    }
                },
                "description": "Basic properties of maintenance mode"
            },
            "MaintenanceModeProperties": {
                "required": [
                    "loginErrorText",
                    "loginText",
                    "notificationText",
                    "slogan",
                    "welcomeText"
                ],
                "type": "object",
                "properties": {
                    "loginText": {
                        "type": "string",
                        "description": "Text shown on login screen"
                    },
                    "welcomeText": {
                        "type": "string",
                        "description": "Welcome text"
                    },
                    "slogan": {
                        "type": "string",
                        "description": "Slogan text"
                    },
                    "loginErrorText": {
                        "type": "string",
                        "description": "Error text shown during login"
                    },
                    "notificationText": {
                        "type": "string",
                        "description": "Notification text"
                    }
                },
                "description": "Extra properties for maintenance mode",
                "nullable": true
            },
            "MemberField": {
                "type": "object",
                "description": "Member field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "multipleValues": {
                                "type": "boolean",
                                "description": "Multiple values state of a field"
                            },
                            "memberTypes": {
                                "type": "array",
                                "description": "Supported member type of a member field",
                                "items": {
                                    "type": "string",
                                    "description": "Supported member type of a member field",
                                    "enum": [
                                        "USER",
                                        "ROLE",
                                        "GROUP"
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "MemberReferenceSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "members": {
                        "type": "array",
                        "description": "Found members",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    }
                },
                "description": "Paginated search result of members"
            },
            "NotSupportedFieldValue": {
                "required": [
                    "type"
                ],
                "type": "object",
                "description": "Not supported field value",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    }
                ]
            },
            "NotSupportedJobStatusInfo": {
                "type": "object",
                "description": "Providing status information is not supported for this job type",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractBackgroundJobStatusInfo"
                    }
                ]
            },
            "OptionChoiceField": {
                "type": "object",
                "description": "Option type choice field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "multipleValues": {
                                "type": "boolean",
                                "description": "Multiple values state of a field"
                            },
                            "options": {
                                "type": "array",
                                "description": "Available options of a choice field",
                                "items": {
                                    "$ref": "#/components/schemas/ChoiceOptionReference"
                                }
                            },
                            "referenceType": {
                                "type": "string",
                                "description": "Type of the contained references"
                            }
                        }
                    }
                ]
            },
            "OutgoingTrackerItemAssociation": {
                "type": "object",
                "description": "Association to another item",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractTrackerItemReference"
                    }
                ]
            },
            "OutlineIndex": {
                "type": "object",
                "properties": {
                    "level": {
                        "type": "integer",
                        "description": "Outline level",
                        "format": "int32",
                        "example": 0
                    },
                    "index": {
                        "type": "integer",
                        "description": "Outline index",
                        "format": "int32",
                        "example": 1
                    }
                },
                "description": "Represents the index of an item on a specific outline level."
            },
            "OutlineItem": {
                "type": "object",
                "description": "Represents an outline item.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractOutline"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "itemReference": {
                                "$ref": "#/components/schemas/TrackerItemReference"
                            },
                            "hasChildren": {
                                "type": "boolean",
                                "description": "Indicator if the item has child items."
                            }
                        }
                    }
                ]
            },
            "OutlineItemSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "outlineItems": {
                        "type": "array",
                        "description": "Found outline items",
                        "items": {
                            "$ref": "#/components/schemas/OutlineItem"
                        }
                    }
                },
                "description": "Paginated search result of outline items"
            },
            "OutlineWiki": {
                "type": "object",
                "description": "A model created for wiki page outline models",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractOutline"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "wikiPageReferenceModel": {
                                "$ref": "#/components/schemas/WikiPageReference"
                            }
                        }
                    }
                ]
            },
            "PermissionIdsRequest": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "description": "Permission references.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerPermissionReference"
                        }
                    }
                },
                "description": "Request model for multiple items."
            },
            "PostComment": {
                "required": [
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "comment": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text of a comment"
                    },
                    "commentFormat": {
                        "type": "string",
                        "description": "Format of a comment",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ],
                        "default": "PlainText"
                    },
                    "attachments": {
                        "type": "string",
                        "description": "Attachments of a comment",
                        "format": "binary"
                    }
                }
            },
            "Project": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version of a project",
                        "format": "int32"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "Key name of a project"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of a project"
                    },
                    "closed": {
                        "type": "boolean",
                        "description": "Closed status of a project"
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "Delete status of a project"
                    },
                    "template": {
                        "type": "boolean",
                        "description": "Template status of a project"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    }
                },
                "description": "Basic properties of a codebeamer project"
            },
            "ProjectBaselineReference": {
                "type": "object",
                "description": "Reference to a project baseline",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "ProjectChoiceField": {
                "type": "object",
                "description": "Project item type choice field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "multipleValues": {
                                "type": "boolean",
                                "description": "Multiple values state of a field"
                            },
                            "referenceType": {
                                "type": "string",
                                "description": "Type of the contained references"
                            }
                        }
                    }
                ]
            },
            "ProjectFilteringRequest": {
                "required": [
                    "keyName"
                ],
                "type": "object",
                "properties": {
                    "keyName": {
                        "type": "string",
                        "description": "Key name of the project"
                    }
                }
            },
            "ProjectMemberPermissions": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "description": "Role references",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/RoleReference"
                        }
                    }
                },
                "description": "Project member permissions"
            },
            "ProjectReference": {
                "type": "object",
                "description": "Reference to a project",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "ProjectSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "projects": {
                        "type": "array",
                        "description": "Found projects",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    }
                },
                "description": "One page of artifact revisions."
            },
            "ReferenceField": {
                "type": "object",
                "description": "Administrative reference field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    }
                ]
            },
            "ReferenceSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "references": {
                        "type": "array",
                        "description": "Found references",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    }
                },
                "description": "One page of references."
            },
            "ReferredTestStepFieldValue": {
                "required": [
                    "referredStepId",
                    "referredTestCaseId",
                    "type"
                ],
                "type": "object",
                "description": "Value container of a referred test step",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "referredStepId": {
                                "type": "string",
                                "description": "Id of the referred test step"
                            },
                            "referredTestCaseId": {
                                "type": "integer",
                                "description": "Id of the test case where the referred test step comes",
                                "format": "int32"
                            },
                            "value": {
                                "type": "string",
                                "description": "Id of the Test Step"
                            }
                        }
                    }
                ]
            },
            "RemoteMigrationFile": {
                "type": "object",
                "properties": {
                    "sha512sum": {
                        "type": "string",
                        "description": "Precomputed SHA512 checksum of the file.",
                        "example": "2e74ed4b0741e1fbe22d61e165c7c0dc4383a1aa5aa708291e32fff4cb189b9a5dfea7ffca2a22dcca258751cf4ad947c1c34abdf3fa2994219be394fbe40370"
                    },
                    "md5sum": {
                        "type": "string",
                        "description": "Precomputed MD5 checksum of the file.",
                        "example": "f6967f92c24a8f3c4849d30c9f17e321"
                    },
                    "filePath": {
                        "type": "string",
                        "description": "The path of the file relative to the configured migration home directory.",
                        "example": "folder/file.txt"
                    },
                    "fileName": {
                        "type": "string",
                        "description": "File name of the newly created attachment.",
                        "example": "newFile.txt"
                    }
                },
                "description": "A file to migrate from a remote directory."
            },
            "ReportAggregate": {
                "type": "object",
                "properties": {
                    "columnRef": {
                        "type": "string",
                        "description": "Column reference",
                        "example": "11-1"
                    },
                    "average": {
                        "type": "number",
                        "description": "Average of the column values",
                        "format": "double",
                        "example": 11.32
                    },
                    "minimum": {
                        "type": "number",
                        "description": "Minimum of the column values",
                        "format": "double",
                        "example": 1.32
                    },
                    "maximum": {
                        "type": "number",
                        "description": "Average of the column values",
                        "format": "double",
                        "example": 21.32
                    },
                    "sum": {
                        "type": "number",
                        "description": "Sum of the column values",
                        "format": "double",
                        "example": 22.64
                    }
                },
                "description": "Aggregated values for a column of a group."
            },
            "ReportCell": {
                "type": "object",
                "properties": {
                    "columnRef": {
                        "type": "string",
                        "description": "Column reference"
                    },
                    "value": {
                        "type": "object",
                        "description": "Cell value",
                        "example": 12.32
                    }
                },
                "description": "Cell value for a column."
            },
            "ReportColumn": {
                "type": "object",
                "properties": {
                    "columnRef": {
                        "type": "string",
                        "description": "Column reference",
                        "example": "12-1"
                    },
                    "field": {
                        "$ref": "#/components/schemas/FieldReference"
                    },
                    "name": {
                        "type": "string",
                        "description": "Column name",
                        "example": "Status"
                    },
                    "type": {
                        "type": "string",
                        "description": "Column type",
                        "example": "choice"
                    },
                    "columnWidthPercentage": {
                        "type": "number",
                        "description": "Column width in percentage",
                        "format": "double",
                        "example": 16.533667
                    },
                    "columnIndex": {
                        "type": "integer",
                        "description": "Column position index in the report.",
                        "format": "int32",
                        "example": 0
                    }
                },
                "description": "Column definition for a report"
            },
            "ReportColumnSettings": {
                "required": [
                    "columnIndex",
                    "field"
                ],
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/FieldReference"
                    },
                    "columnIndex": {
                        "type": "integer",
                        "description": "Index of the column in the report table.",
                        "format": "int32",
                        "example": 0
                    }
                },
                "description": "Settings for a column definition."
            },
            "ReportGroup": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of the group.",
                        "example": "row"
                    },
                    "header": {
                        "type": "string",
                        "description": "Grouping header",
                        "example": "Status: In progress"
                    },
                    "groupingValue": {
                        "type": "string",
                        "description": "The common value in the group, , if it's available",
                        "example": "In progress"
                    },
                    "groupingValueId": {
                        "type": "integer",
                        "description": "The id of the common value in the group, if it's available",
                        "format": "int32",
                        "example": 2
                    },
                    "count": {
                        "type": "number",
                        "description": "Number of items in the group, if it has subgroups then the aggregated number of items.",
                        "format": "double",
                        "example": 32
                    },
                    "aggregates": {
                        "type": "array",
                        "description": "List of the aggregate values with column id.",
                        "items": {
                            "$ref": "#/components/schemas/ReportAggregate"
                        }
                    }
                },
                "description": "A report group which can contain rows or other groups based on the type.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "ReportGroupWithGroups": {
                "type": "object",
                "description": "ReportGroup having subgroups.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReportGroup"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "groups": {
                                "type": "array",
                                "description": "Subgroups in the group.",
                                "items": {
                                    "$ref": "#/components/schemas/ReportGroup"
                                }
                            }
                        }
                    }
                ]
            },
            "ReportGroupWithReferencedRows": {
                "type": "object",
                "description": "ReportGroup having rows with references.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReportGroup"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "groupingLevel": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "starRow": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "rows": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ReportReferencedRow"
                                }
                            }
                        }
                    }
                ]
            },
            "ReportGroupWithRows": {
                "type": "object",
                "description": "ReportGroup having rows.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReportGroup"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "rows": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ReportRow"
                                }
                            }
                        }
                    }
                ]
            },
            "ReportItem": {
                "type": "object",
                "properties": {
                    "item": {
                        "$ref": "#/components/schemas/TrackerItem"
                    },
                    "outlineLevel": {
                        "type": "integer",
                        "description": "Item's level in the tracker outline.",
                        "format": "int32"
                    },
                    "isRealResult": {
                        "type": "boolean",
                        "description": "Indicator if the item is a real query result (e.g. not an ancestor item)."
                    }
                },
                "description": "An item of the report."
            },
            "ReportItemReference": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "integer",
                        "description": "Identifier of the underlying item.",
                        "format": "int32"
                    },
                    "trackerId": {
                        "type": "integer",
                        "description": "Identifier of the tracker of the underlying item.",
                        "format": "int32"
                    }
                },
                "description": "Reference data of an underlying item of a row."
            },
            "ReportItemResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "items": {
                        "type": "array",
                        "description": "Found tracker items",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        }
                    }
                }
            },
            "ReportPagingInformation": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "pageCount": {
                        "type": "integer",
                        "description": "Number of pages in the report",
                        "format": "int32"
                    }
                },
                "description": "Paging information of the current result."
            },
            "ReportPermission": {
                "required": [
                    "access",
                    "project",
                    "role"
                ],
                "type": "object",
                "properties": {
                    "project": {
                        "$ref": "#/components/schemas/ProjectReference"
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleReference"
                    },
                    "access": {
                        "type": "string",
                        "description": "Access level",
                        "example": "READ",
                        "enum": [
                            "NONE",
                            "READ",
                            "WRITE"
                        ]
                    }
                },
                "description": "Access permissions for the report."
            },
            "ReportReference": {
                "type": "object",
                "description": "Reference to a report",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "ReportReferenceLevel": {
                "type": "object",
                "properties": {
                    "columns": {
                        "type": "array",
                        "description": "Columns to show on this reference level.",
                        "items": {
                            "$ref": "#/components/schemas/ReportColumn"
                        }
                    },
                    "upstreamReferenceRows": {
                        "type": "array",
                        "description": "Upstream reference results.",
                        "items": {
                            "$ref": "#/components/schemas/ReportReferencedRow"
                        }
                    },
                    "downstreamReferenceRows": {
                        "type": "array",
                        "description": "Downstream reference results.",
                        "items": {
                            "$ref": "#/components/schemas/ReportReferencedRow"
                        }
                    },
                    "referenceLevel": {
                        "type": "integer",
                        "description": "Reference level.",
                        "format": "int32",
                        "example": 1
                    }
                },
                "description": "Reference results for an item."
            },
            "ReportReferenceLevelSettings": {
                "required": [
                    "columns",
                    "downstreamReference",
                    "level",
                    "upstreamReference"
                ],
                "type": "object",
                "properties": {
                    "referenceTrackers": {
                        "type": "array",
                        "description": "Trackers to include on this level.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerReference"
                        }
                    },
                    "referenceTrackerTypes": {
                        "type": "array",
                        "description": "Tracker types to include on this level.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerTypeReference"
                        }
                    },
                    "columns": {
                        "type": "array",
                        "description": "Columns to show on this reference level.",
                        "items": {
                            "$ref": "#/components/schemas/ReportColumnSettings"
                        }
                    },
                    "upstreamReference": {
                        "type": "boolean",
                        "description": "Include upstream references indicator.",
                        "example": true
                    },
                    "downstreamReference": {
                        "type": "boolean",
                        "description": "Include downstream references indicator.",
                        "example": false
                    },
                    "level": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Level of the reference layer",
                        "format": "int32",
                        "example": 1
                    }
                },
                "description": "Reference level settings for Intelligent Table View."
            },
            "ReportReferencedRow": {
                "type": "object",
                "description": "Result row having references.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReportRow"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "itemRef": {
                                "$ref": "#/components/schemas/ReportItemReference"
                            },
                            "cells": {
                                "type": "array",
                                "description": "Cells in a row.",
                                "items": {
                                    "$ref": "#/components/schemas/ReportCell"
                                }
                            },
                            "outlineLevel": {
                                "type": "integer",
                                "description": "Item's level in the tracker outline.",
                                "format": "int32"
                            },
                            "references": {
                                "$ref": "#/components/schemas/ReportReferenceLevel"
                            },
                            "isRealResult": {
                                "type": "boolean",
                                "description": "Indicator if the item is a real query result (e.g. not an ancestor item)."
                            }
                        }
                    }
                ]
            },
            "ReportResult": {
                "type": "object",
                "properties": {
                    "report": {
                        "$ref": "#/components/schemas/ReportReference"
                    },
                    "cbQL": {
                        "type": "string",
                        "description": "CbQL query behind the report",
                        "example": "project.id IN (2) AND tracker.id IN (21323) ORDER BY priority ASC"
                    },
                    "columns": {
                        "type": "array",
                        "description": "Column information",
                        "items": {
                            "$ref": "#/components/schemas/ReportColumn"
                        }
                    },
                    "pagingInformation": {
                        "$ref": "#/components/schemas/ReportPagingInformation"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ReportGroup"
                    },
                    "showAllChildren": {
                        "type": "boolean",
                        "description": "Indicator to ability to collapse/expand all child items."
                    }
                },
                "description": "Report data model"
            },
            "ReportRow": {
                "type": "object",
                "properties": {
                    "itemRef": {
                        "$ref": "#/components/schemas/ReportItemReference"
                    },
                    "cells": {
                        "type": "array",
                        "description": "Cells in a row.",
                        "items": {
                            "$ref": "#/components/schemas/ReportCell"
                        }
                    },
                    "outlineLevel": {
                        "type": "integer",
                        "description": "Item's level in the tracker outline.",
                        "format": "int32"
                    },
                    "isRealResult": {
                        "type": "boolean",
                        "description": "Indicator if the item is a real query result (e.g. not an ancestor item)."
                    }
                },
                "description": "A row of the report containing cell information."
            },
            "RepositoryChoiceField": {
                "type": "object",
                "description": "Repository type choice field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "multipleValues": {
                                "type": "boolean",
                                "description": "Multiple values state of a field"
                            },
                            "referenceType": {
                                "type": "string",
                                "description": "Type of the contained references"
                            }
                        }
                    }
                ]
            },
            "RepositoryReference": {
                "type": "object",
                "description": "Reference to a Repository",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "ResizableReportColumnSettings": {
                "required": [
                    "columnIndex",
                    "field"
                ],
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/FieldReference"
                    },
                    "columnIndex": {
                        "type": "integer",
                        "description": "Index of the column in the report table.",
                        "format": "int32",
                        "example": 0
                    },
                    "columnWidthPercentage": {
                        "type": "number",
                        "description": "Width of the column in percentage.",
                        "format": "double",
                        "example": 43.2
                    }
                },
                "description": "Settings for a resizeable column definition."
            },
            "ResourceForbiddenException": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "resourceUri": {
                        "type": "string"
                    }
                }
            },
            "ResourceNotFoundException": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "resourceUri": {
                        "type": "string"
                    }
                }
            },
            "ResourceUnauthorizedException": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "resourceUri": {
                        "type": "string"
                    }
                }
            },
            "ReviewMemberReferenceField": {
                "type": "object",
                "description": "Project role reference field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    }
                ]
            },
            "Role": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of a role"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Format of a role's description",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    }
                }
            },
            "RoleReference": {
                "type": "object",
                "description": "Reference to a role",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "RoleWithPermissions": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/RoleReference"
                    },
                    "trackerPermissions": {
                        "type": "array",
                        "description": "Permission for the role",
                        "items": {
                            "$ref": "#/components/schemas/TrackerPermissionReference"
                        }
                    }
                },
                "description": "Model that contains permissions connected to roles"
            },
            "SimpleReportSettings": {
                "required": [
                    "cbQl",
                    "columns",
                    "description",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "reportId": {
                        "type": "integer",
                        "description": "Id of a report",
                        "format": "int32",
                        "example": 1
                    },
                    "cbQl": {
                        "type": "string",
                        "description": "CbQL query string of the report.",
                        "example": "priority='Normal'"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the report.",
                        "example": "My first query"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the report.",
                        "example": "Normal priority items."
                    },
                    "columns": {
                        "type": "array",
                        "description": "Column definitions.",
                        "items": {
                            "$ref": "#/components/schemas/ResizableReportColumnSettings"
                        }
                    },
                    "addedPermissions": {
                        "type": "array",
                        "description": "Access permissions for the report.",
                        "items": {
                            "$ref": "#/components/schemas/ReportPermission"
                        }
                    },
                    "showAncestors": {
                        "type": "boolean",
                        "description": "Indicator to show the ancestors of a result item.",
                        "example": true
                    },
                    "showDescendants": {
                        "type": "boolean",
                        "description": "Indicator to show the descendants of a result item.",
                        "example": false
                    },
                    "showAllChildren": {
                        "type": "boolean",
                        "description": "Indicator to ability to collapse/expand all child items.",
                        "example": false
                    }
                },
                "description": "Settings for a simple report."
            },
            "SystemStatus": {
                "type": "object",
                "properties": {
                    "systemMode": {
                        "type": "string",
                        "description": "System mode",
                        "enum": [
                            "NORMAL",
                            "MAINTENANCE"
                        ]
                    }
                },
                "description": "Basic properties of system status"
            },
            "TableField": {
                "type": "object",
                "description": "Table field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "columns": {
                                "type": "array",
                                "description": "Columns of a table",
                                "items": {
                                    "$ref": "#/components/schemas/AbstractField"
                                }
                            }
                        }
                    }
                ]
            },
            "TableFieldValue": {
                "required": [
                    "type"
                ],
                "type": "object",
                "description": "Value container of a table field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "values": {
                                "type": "array",
                                "description": "Table values",
                                "items": {
                                    "type": "array",
                                    "description": "Table values",
                                    "items": {
                                        "$ref": "#/components/schemas/AbstractFieldValue"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "TestRunResult": {
                "type": "object",
                "properties": {
                    "testRuns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItem"
                        }
                    }
                },
                "description": "Multiple Test Runs"
            },
            "TextField": {
                "type": "object",
                "description": "Text field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "min": {
                                "type": "integer",
                                "description": "Minimum length of value of a field",
                                "format": "int32"
                            },
                            "max": {
                                "type": "integer",
                                "description": "Max length of value of a field",
                                "format": "int32"
                            }
                        }
                    }
                ]
            },
            "TextFieldValue": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "description": "Value container of a text field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "Text value"
                            }
                        }
                    }
                ]
            },
            "TooManyRequestsException": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "resourceUri": {
                        "type": "string"
                    },
                    "retryAfterSecond": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "TraceabilityInitialLevelFilter": {
                "required": [
                    "cbQL"
                ],
                "type": "object",
                "properties": {
                    "showAncestorItems": {
                        "type": "boolean",
                        "description": "Show ancestor items",
                        "default": false
                    },
                    "showDescendantItems": {
                        "type": "boolean",
                        "description": "Show descendant items",
                        "default": false
                    },
                    "historyDate": {
                        "type": "string",
                        "description": "Snapshot view of given date",
                        "format": "date-time"
                    },
                    "historyBaselineId": {
                        "type": "integer",
                        "description": "Snapshot view of given baseline",
                        "format": "int32"
                    },
                    "cbQL": {
                        "type": "string",
                        "description": "cbQL"
                    }
                },
                "description": "Settings to filter items"
            },
            "TraceabilityItem": {
                "type": "object",
                "properties": {
                    "itemRevision": {
                        "$ref": "#/components/schemas/TrackerItemRevision"
                    },
                    "outgoing reference": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemRevision"
                        }
                    },
                    "incoming reference": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemRevision"
                        }
                    },
                    "outgoing association": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemRevision"
                        }
                    },
                    "incoming association": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemRevision"
                        }
                    },
                    "children": {
                        "type": "array",
                        "description": "children",
                        "items": {
                            "$ref": "#/components/schemas/TraceabilityItem"
                        }
                    },
                    "outgoingReferences": {
                        "type": "array",
                        "description": "outgoing reference",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemRevision"
                        }
                    },
                    "outgoingAssociations": {
                        "type": "array",
                        "description": "outgoing association",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemRevision"
                        }
                    },
                    "incomingReferences": {
                        "type": "array",
                        "description": "incoming references",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemRevision"
                        }
                    },
                    "incomingAssociations": {
                        "type": "array",
                        "description": "incoming associations",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemRevision"
                        }
                    }
                },
                "description": "Traceability Item"
            },
            "TraceabilityLevelFilter": {
                "required": [
                    "cbQL"
                ],
                "type": "object",
                "properties": {
                    "previousLevelItems": {
                        "type": "array",
                        "description": "Previous Level Items",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemRevision"
                        }
                    },
                    "outgoingReference": {
                        "type": "boolean",
                        "description": "Show outgoing references",
                        "default": true
                    },
                    "incomingReference": {
                        "type": "boolean",
                        "description": "Show incoming references",
                        "default": true
                    },
                    "outgoingAssociation": {
                        "type": "boolean",
                        "description": "Show outgoing association",
                        "default": true
                    },
                    "incomingAssociation": {
                        "type": "boolean",
                        "description": "Show incoming association",
                        "default": true
                    },
                    "foldersAndInformation": {
                        "type": "boolean",
                        "description": "Show folders and information",
                        "default": false
                    },
                    "cbQL": {
                        "type": "string",
                        "description": "cbQL"
                    },
                    "historyDate": {
                        "type": "string",
                        "description": "History Date - Snapshot view of the given date",
                        "format": "date-time"
                    },
                    "historyBaselineId": {
                        "type": "integer",
                        "description": "History Baseline Id - Snapshot view of the given baseline",
                        "format": "int32"
                    }
                },
                "description": "Traceability level filter"
            },
            "TraceabilityResult": {
                "type": "object",
                "properties": {
                    "limitWarnings": {
                        "type": "string",
                        "description": "limit warnings"
                    },
                    "traceabilityItems": {
                        "type": "array",
                        "description": "traceability items",
                        "items": {
                            "$ref": "#/components/schemas/TraceabilityItem"
                        }
                    }
                },
                "description": "Traceability result"
            },
            "Tracker": {
                "required": [
                    "defaultShowAncestorItems",
                    "defaultShowDescendantItems",
                    "deleted",
                    "hidden",
                    "onlyWorkflowCanCreateNewReferringItem",
                    "usingQuickTransitions",
                    "usingWorkflow"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "keyName": {
                        "type": "string",
                        "description": "Keyname of a tracker"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version of a tracker",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TrackerTypeReference"
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "Indicator if the tracker is deleted"
                    },
                    "hidden": {
                        "type": "boolean",
                        "description": "Indicator if the tracker is hidden"
                    },
                    "color": {
                        "type": "string",
                        "description": "Color of the tracker"
                    },
                    "usingWorkflow": {
                        "type": "boolean",
                        "description": "Should transitions and workflow actions be available in the tracker or not"
                    },
                    "onlyWorkflowCanCreateNewReferringItem": {
                        "type": "boolean",
                        "description": "If true, then the only way to create new referring items is through workflow actions"
                    },
                    "usingQuickTransitions": {
                        "type": "boolean",
                        "description": "If true, then every transition will be executed immediately (if possible) without opening an editor for the item"
                    },
                    "defaultShowAncestorItems": {
                        "type": "boolean",
                        "description": "Default Outline should show Ancestor Items or not"
                    },
                    "defaultShowDescendantItems": {
                        "type": "boolean",
                        "description": "Default Outline should show Descendant Items or not"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectReference"
                    },
                    "templateTracker": {
                        "$ref": "#/components/schemas/TrackerReference"
                    },
                    "availableAsTemplate": {
                        "type": "boolean",
                        "description": "Indicator if the tracker can be used as a template"
                    },
                    "sharedInWorkingSet": {
                        "type": "boolean",
                        "description": "If the tracker is shared in a WorkingSet"
                    }
                },
                "description": "Basic properties of a codebeamer tracker"
            },
            "TrackerBaselineReference": {
                "type": "object",
                "description": "Reference to a tracker baseline",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "TrackerChoiceField": {
                "type": "object",
                "description": "Tracker type choice field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "multipleValues": {
                                "type": "boolean",
                                "description": "Multiple values state of a field"
                            },
                            "referenceType": {
                                "type": "string",
                                "description": "Type of the contained references"
                            }
                        }
                    }
                ]
            },
            "TrackerFieldPermissions": {
                "type": "object",
                "properties": {
                    "fieldReference": {
                        "$ref": "#/components/schemas/FieldReference"
                    },
                    "fieldPermissions": {
                        "type": "array",
                        "description": "Permissions for the given field",
                        "items": {
                            "$ref": "#/components/schemas/TrackerFieldStatusPermissions"
                        }
                    }
                },
                "description": "Tracker field permissions"
            },
            "TrackerFieldStatusPermissions": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/ChoiceOptionReference"
                    },
                    "permissions": {
                        "type": "array",
                        "description": "Access permissions by role",
                        "items": {
                            "$ref": "#/components/schemas/AccessPermission"
                        }
                    }
                },
                "description": "Field permissions by role for specific status"
            },
            "TrackerFieldsStatusPermissions": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "description": "Permissions",
                        "items": {
                            "$ref": "#/components/schemas/TrackerFieldPermissions"
                        }
                    }
                },
                "description": "All field permissions by role for specific status"
            },
            "TrackerFilteringRequest": {
                "type": "object",
                "properties": {
                    "types": {
                        "type": "array",
                        "description": "List of tracker type references, to only show trackers of these types.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerTypeReference"
                        }
                    },
                    "hidden": {
                        "type": "boolean",
                        "description": "True to also show hidden trackers.",
                        "example": false
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "True to also show removed trackers.",
                        "example": false
                    },
                    "keyName": {
                        "type": "string",
                        "description": "Filter by project key name"
                    }
                }
            },
            "TrackerItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/TrackerItemReference"
                    },
                    "owners": {
                        "type": "array",
                        "description": "Owners of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version of a tracker item",
                        "format": "int32",
                        "readOnly": true
                    },
                    "assignedAt": {
                        "type": "string",
                        "description": "Assignee date of a tracker item",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "assignedTo": {
                        "type": "array",
                        "description": "Assignees of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of a tracker item",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of a tracker item",
                        "format": "date-time"
                    },
                    "closedAt": {
                        "type": "string",
                        "description": "Close date of a tracker item",
                        "format": "date-time"
                    },
                    "storyPoints": {
                        "type": "integer",
                        "description": "Story points of a tracker item",
                        "format": "int32"
                    },
                    "tracker": {
                        "$ref": "#/components/schemas/TrackerReference"
                    },
                    "children": {
                        "type": "array",
                        "description": "Children of a tracker item",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    },
                    "customFields": {
                        "type": "array",
                        "description": "Custom field of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractFieldValue"
                        }
                    },
                    "priority": {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    "accruedMillis": {
                        "type": "integer",
                        "description": "Accrued work time of a tracker item in milliseconds",
                        "format": "int64",
                        "readOnly": true
                    },
                    "estimatedMillis": {
                        "type": "integer",
                        "description": "Estimated work time of a tracker item in milliseconds",
                        "format": "int64"
                    },
                    "spentMillis": {
                        "type": "integer",
                        "description": "Spent work time of a tracker item in milliseconds",
                        "format": "int64",
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    "platforms": {
                        "type": "array",
                        "description": "Platforms of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "categories": {
                        "type": "array",
                        "description": "Categories of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "subjects": {
                        "type": "array",
                        "description": "Subjects of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "resolutions": {
                        "type": "array",
                        "description": "Resolutions of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "severities": {
                        "type": "array",
                        "description": "Severities of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "releaseMethod": {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    "formality": {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    "teams": {
                        "type": "array",
                        "description": "Teams of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "areas": {
                        "type": "array",
                        "description": "Areas of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "versions": {
                        "type": "array",
                        "description": "Versions of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractReference"
                        }
                    },
                    "ordinal": {
                        "type": "integer",
                        "description": "Ordinal of a tracker item",
                        "format": "int32"
                    },
                    "typeName": {
                        "type": "string",
                        "description": "Type name of a tracker item"
                    },
                    "comments": {
                        "type": "array",
                        "description": "Comment in the tracker item",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/CommentReference"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "description": "Tags of the tracker item",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/Label"
                        }
                    }
                },
                "description": "Basic properties of a codebeamer tracker item"
            },
            "TrackerItemAttachmentRequest": {
                "type": "object",
                "description": "Request data to retrieve tracker item attachments.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TrackerItemsRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "baselineId": {
                                "type": "integer",
                                "description": "Baseline id to specify the versions of the tracker items.",
                                "format": "int32",
                                "example": 1203
                            },
                            "excludeFilter": {
                                "type": "boolean",
                                "description": "Indicator if the attachments matching the filters need to be excluded or not",
                                "example": false
                            },
                            "extensions": {
                                "type": "array",
                                "description": "File extension filters.",
                                "example": [
                                    "docx",
                                    "xlsx"
                                ],
                                "items": {
                                    "type": "string",
                                    "description": "File extension filters.",
                                    "example": "[\"docx\",\"xlsx\"]"
                                }
                            },
                            "mimeTypes": {
                                "type": "array",
                                "description": "File mime type filters.",
                                "example": [
                                    "image/png",
                                    "application/zip"
                                ],
                                "items": {
                                    "type": "string",
                                    "description": "File mime type filters.",
                                    "example": "[\"image/png\",\"application/zip\"]"
                                }
                            }
                        }
                    }
                ]
            },
            "TrackerItemChange": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/FieldReference"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field"
                    },
                    "oldValue": {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    "newValue": {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    "type": {
                        "type": "string",
                        "description": "Change model type"
                    }
                },
                "description": "Reference to an item",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "TrackerItemChildReference": {
                "required": [
                    "index",
                    "itemReference"
                ],
                "type": "object",
                "properties": {
                    "itemReference": {
                        "$ref": "#/components/schemas/TrackerItemReference"
                    },
                    "index": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Ordinal in the tracker outline.",
                        "format": "int32",
                        "example": 0
                    }
                },
                "description": "Reference to a child item in the tracker outline."
            },
            "TrackerItemChoiceField": {
                "type": "object",
                "description": "Tracker item type choice field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "multipleValues": {
                                "type": "boolean",
                                "description": "Multiple values state of a field"
                            },
                            "referenceType": {
                                "type": "string",
                                "description": "Type of the contained references"
                            }
                        }
                    }
                ]
            },
            "TrackerItemField": {
                "type": "object",
                "properties": {
                    "editableFields": {
                        "type": "array",
                        "description": "Fields which can be modified",
                        "items": {
                            "$ref": "#/components/schemas/AbstractFieldValue"
                        }
                    },
                    "readOnlyFields": {
                        "type": "array",
                        "description": "Fields which are not writable in the current state",
                        "items": {
                            "$ref": "#/components/schemas/AbstractFieldValue"
                        }
                    },
                    "editableTableFields": {
                        "type": "array",
                        "description": "Table fields which can be modified",
                        "items": {
                            "$ref": "#/components/schemas/TableFieldValue"
                        }
                    },
                    "readOnlyTableFields": {
                        "type": "array",
                        "description": "Table fields which are not writable in the current state",
                        "items": {
                            "$ref": "#/components/schemas/TableFieldValue"
                        }
                    }
                }
            },
            "TrackerItemFieldAccessibility": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/FieldReference"
                    },
                    "visible": {
                        "type": "boolean",
                        "description": "Field is visible"
                    },
                    "mandatory": {
                        "type": "boolean",
                        "description": "Field is mandatory"
                    },
                    "editable": {
                        "type": "boolean",
                        "description": "Field is editable"
                    }
                },
                "description": "Accessibilities of fields"
            },
            "TrackerItemFieldAccessibilityList": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "array",
                        "description": "Accessibilities of fields",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemFieldAccessibility"
                        }
                    }
                }
            },
            "TrackerItemHistory": {
                "type": "object",
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "List of version changes.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemHistoryRevision"
                        }
                    }
                },
                "description": "Tracker item history containing all versions of an item."
            },
            "TrackerItemHistoryRevision": {
                "type": "object",
                "properties": {
                    "itemRevision": {
                        "$ref": "#/components/schemas/TrackerItemRevision"
                    },
                    "changes": {
                        "type": "array",
                        "description": "Changes happened between the previous and current revision.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemChange"
                        }
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    }
                },
                "description": "Revision history entry."
            },
            "TrackerItemReference": {
                "type": "object",
                "description": "Reference to a tracker item",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "referenceData": {
                                "$ref": "#/components/schemas/TrackerItemReferenceData"
                            }
                        }
                    }
                ]
            },
            "TrackerItemReferenceData": {
                "type": "object",
                "properties": {
                    "suspectPropagation": {
                        "type": "string",
                        "description": "Type of suspect propagation",
                        "enum": [
                            "DO_NOT_PROPAGATE",
                            "PROPAGATE",
                            "REVERSE",
                            "BIDIRECTIONAL"
                        ]
                    }
                },
                "description": "Properties of a tracker item reference"
            },
            "TrackerItemReferenceSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "itemRefs": {
                        "type": "array",
                        "description": "Found tracker item references",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    }
                },
                "description": "One page of tracker item references."
            },
            "TrackerItemRelationsResult": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "$ref": "#/components/schemas/TrackerItemRevision"
                    },
                    "downstreamReferences": {
                        "type": "array",
                        "description": "References and associations to the item",
                        "items": {
                            "$ref": "#/components/schemas/DownstreamTrackerItemReference"
                        }
                    },
                    "upstreamReferences": {
                        "type": "array",
                        "description": "References and associations to the item",
                        "items": {
                            "$ref": "#/components/schemas/UpstreamTrackerItemReference"
                        }
                    },
                    "incomingAssociations": {
                        "type": "array",
                        "description": "References and associations to the item",
                        "items": {
                            "$ref": "#/components/schemas/IncomingTrackerItemAssociation"
                        }
                    },
                    "outgoingAssociations": {
                        "type": "array",
                        "description": "References and associations to the item",
                        "items": {
                            "$ref": "#/components/schemas/OutgoingTrackerItemAssociation"
                        }
                    }
                },
                "description": "References to a tracker item"
            },
            "TrackerItemReview": {
                "type": "object",
                "properties": {
                    "reviewers": {
                        "type": "array",
                        "description": "List of reviewers, and their votes",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReviewVote"
                        }
                    },
                    "result": {
                        "type": "string",
                        "description": "Whether the review is approved or rejected",
                        "enum": [
                            "APPROVED",
                            "REJECTED",
                            "UNDECIDED"
                        ]
                    },
                    "trackerItem": {
                        "$ref": "#/components/schemas/TrackerItemRevision"
                    },
                    "config": {
                        "$ref": "#/components/schemas/TrackerItemReviewConfig"
                    }
                },
                "description": "A tracker item review instance including its reviewers and their decisions"
            },
            "TrackerItemReviewConfig": {
                "type": "object",
                "properties": {
                    "requiredSignature": {
                        "type": "string",
                        "description": "Whether the user has to provide its credentials to vote",
                        "enum": [
                            "NONE",
                            "PASSWORD",
                            "USERNAME_AND_PASSWORD"
                        ]
                    },
                    "requiredApprovals": {
                        "type": "integer",
                        "description": "Number of approvals after which the review is considered approved",
                        "format": "int32"
                    },
                    "requiredRejections": {
                        "type": "integer",
                        "description": "Number of rejections after which the review is considered rejected",
                        "format": "int32"
                    },
                    "roleRequired": {
                        "type": "boolean",
                        "description": "Whether the reviewers have to chose in which of their roles do they want to vote"
                    }
                },
                "description": "The configuration from which the review was created"
            },
            "TrackerItemReviewExport": {
                "type": "object",
                "properties": {
                    "reviewers": {
                        "type": "array",
                        "description": "List of reviewers and their votes",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReviewVoteExport"
                        }
                    },
                    "trackerItemVersion": {
                        "type": "integer",
                        "description": "Version of the Tracker Item at the time of the review",
                        "format": "int32"
                    }
                },
                "description": "A tracker item review instance including its reviewers and their decisions"
            },
            "TrackerItemReviewVote": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "asRole": {
                        "$ref": "#/components/schemas/RoleReference"
                    },
                    "decision": {
                        "type": "string",
                        "description": "The result of this particular vote",
                        "enum": [
                            "APPROVED",
                            "REJECTED",
                            "UNDECIDED"
                        ]
                    },
                    "reviewedAt": {
                        "type": "string",
                        "description": "Date and time of the vote",
                        "format": "date-time"
                    }
                },
                "description": "A tracker item review instance including its reviewers and their decisions"
            },
            "TrackerItemReviewVoteExport": {
                "type": "object",
                "properties": {
                    "userName": {
                        "type": "string",
                        "description": "Username of the user who voted"
                    },
                    "reviewedAt": {
                        "type": "string",
                        "description": "Time at when the review was performed",
                        "format": "date-time"
                    },
                    "decision": {
                        "type": "string",
                        "description": "What the reviewer voted for"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name of the reviewer"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the reviewer"
                    },
                    "roleName": {
                        "type": "string",
                        "description": "Name of the role which the reviewer chose to use to vote"
                    }
                },
                "description": "A reviewer and its vote for a particular Tracker Item Review instance"
            },
            "TrackerItemRevision": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Tracker item id",
                        "format": "int32"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Tracker item version",
                        "format": "int32"
                    }
                },
                "description": "Tracker item revision identifier"
            },
            "TrackerItemRowChange": {
                "type": "object",
                "description": "Change item for a tracker item field row.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TrackerItemChange"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "rowNumber": {
                                "type": "integer",
                                "description": "Index of the changed row",
                                "format": "int32",
                                "example": 0
                            }
                        }
                    }
                ]
            },
            "TrackerItemSearchRequest": {
                "required": [
                    "queryString"
                ],
                "type": "object",
                "properties": {
                    "baselineId": {
                        "type": "integer",
                        "description": "Baseline on which the query is applied.",
                        "format": "int32",
                        "example": 1234
                    },
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32",
                        "example": 1,
                        "default": 1
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32",
                        "example": 25,
                        "default": 25
                    },
                    "queryString": {
                        "type": "string",
                        "description": "CbQL query for the requested items",
                        "example": "priority='Normal'"
                    }
                }
            },
            "TrackerItemSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "items": {
                        "type": "array",
                        "description": "Found tracker items",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItem"
                        }
                    }
                },
                "description": "One page of tracker items."
            },
            "TrackerItemWithTrackerItemReviewsExport": {
                "type": "object",
                "properties": {
                    "trackerItem": {
                        "$ref": "#/components/schemas/TrackerItem"
                    },
                    "trackerItemReviews": {
                        "type": "array",
                        "description": "List of Tracker Item Reviews",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReviewExport"
                        }
                    }
                },
                "description": "A Tracker Item with all of its corresponding Tracker Item Reviews"
            },
            "TrackerItemsRequest": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "description": "Item references.",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of a ItemsRequest"
                    }
                },
                "description": "Request model for multiple items.",
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "TrackerPermission": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "label": {
                        "type": "string",
                        "description": "Variable name of the permission"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the permission"
                    }
                }
            },
            "TrackerPermissionReference": {
                "type": "object",
                "description": "Reference to a tracker permission",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "TrackerReference": {
                "type": "object",
                "description": "Reference to a tracker",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "TrackerReportSettings": {
                "required": [
                    "cbQl",
                    "columns",
                    "description",
                    "isPublic",
                    "name",
                    "tracker"
                ],
                "type": "object",
                "properties": {
                    "reportId": {
                        "type": "integer",
                        "description": "Id of a report",
                        "format": "int32",
                        "example": 1
                    },
                    "cbQl": {
                        "type": "string",
                        "description": "CbQL query string of the report.",
                        "example": "priority='Normal'"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the report.",
                        "example": "My first query"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the report.",
                        "example": "Normal priority items."
                    },
                    "columns": {
                        "type": "array",
                        "description": "Column definitions.",
                        "items": {
                            "$ref": "#/components/schemas/ResizableReportColumnSettings"
                        }
                    },
                    "showAncestors": {
                        "type": "boolean",
                        "description": "Indicator to show the ancestors of a result item.",
                        "example": true
                    },
                    "showDescendants": {
                        "type": "boolean",
                        "description": "Indicator to show the descendants of a result item.",
                        "example": false
                    },
                    "showAllChildren": {
                        "type": "boolean",
                        "description": "Indicator to ability to collapse/expand all child items.",
                        "example": false
                    },
                    "tracker": {
                        "$ref": "#/components/schemas/TrackerReference"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "Public report indicator.",
                        "example": true
                    },
                    "renderingMethod": {
                        "type": "string",
                        "description": "Rendering method for Intelligent Table View.",
                        "example": "table",
                        "enum": [
                            "disabled",
                            "table",
                            "tree"
                        ]
                    },
                    "referenceLevelSettings": {
                        "type": "array",
                        "description": "Reference level setting for Intelligent Table View.",
                        "items": {
                            "$ref": "#/components/schemas/ReportReferenceLevelSettings"
                        }
                    }
                },
                "description": "Settings of a report on a tracker."
            },
            "TrackerSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "trackers": {
                        "type": "array",
                        "description": "Found tracker items",
                        "items": {
                            "$ref": "#/components/schemas/Tracker"
                        }
                    }
                },
                "description": "One page of trackers."
            },
            "TrackerType": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "varName": {
                        "type": "string",
                        "description": "Internal/variable name of a tracker type"
                    },
                    "trackerIconUrl": {
                        "type": "string",
                        "description": "Tracker icon URL of a tracker type"
                    },
                    "itemIconUrl": {
                        "type": "string",
                        "description": "Item icon URL of a tracker type"
                    },
                    "color": {
                        "type": "string",
                        "description": "Color of a tracker type"
                    },
                    "outline": {
                        "type": "boolean",
                        "description": "True if outline is enabled"
                    },
                    "branchable": {
                        "type": "boolean",
                        "description": "True if tracker type is branchable"
                    },
                    "docEditView": {
                        "type": "boolean",
                        "description": "True if tracker type has document view"
                    },
                    "editorUrl": {
                        "type": "string",
                        "description": "Editor URL of a tracker type"
                    },
                    "urlLinkFormat": {
                        "type": "string",
                        "description": "URL link format of a tracker type"
                    }
                }
            },
            "TrackerTypeReference": {
                "type": "object",
                "description": "Reference to a tracker type",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "UpdateAttachment": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Format of description",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ],
                        "default": "PlainText"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content of attachment",
                        "format": "binary"
                    }
                }
            },
            "UpdateTestCaseRunRequest": {
                "required": [
                    "result",
                    "testCaseReference"
                ],
                "type": "object",
                "properties": {
                    "testCaseReference": {
                        "$ref": "#/components/schemas/TrackerItemReference"
                    },
                    "result": {
                        "type": "string",
                        "description": "Result of the test case",
                        "enum": [
                            "PASSED",
                            "FAILED",
                            "BLOCKED"
                        ]
                    },
                    "conclusion": {
                        "type": "string",
                        "description": "Optional conclusion text"
                    },
                    "runTime": {
                        "type": "integer",
                        "description": "Optional runtime in seconds",
                        "format": "int32"
                    },
                    "reportedBugReferences": {
                        "type": "array",
                        "description": "Optional reference list of Bugs attached to the Test result",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    },
                    "customFields": {
                        "type": "array",
                        "description": "Optional field values to set on the Test Run",
                        "items": {
                            "$ref": "#/components/schemas/AbstractFieldValue"
                        }
                    }
                },
                "description": "Request model to update Test Run's result for a Test Case"
            },
            "UpdateTestRunRequest": {
                "required": [
                    "updateRequestModels"
                ],
                "type": "object",
                "properties": {
                    "updateRequestModels": {
                        "type": "array",
                        "description": "List of update Test Case run request models",
                        "items": {
                            "$ref": "#/components/schemas/UpdateTestCaseRunRequest"
                        }
                    },
                    "parentResultPropagation": {
                        "type": "boolean",
                        "description": "The propagation of the result is enabled for parent Test Run or not",
                        "default": true
                    }
                },
                "description": "Model to contain Test Case run update request models"
            },
            "UpdateTrackerItemChildrenRequest": {
                "type": "object",
                "properties": {
                    "children": {
                        "type": "array",
                        "description": "Child items to update",
                        "items": {
                            "$ref": "#/components/schemas/TrackerItemReference"
                        }
                    }
                },
                "description": "Tracker item child update request"
            },
            "UpdateTrackerItemField": {
                "type": "object",
                "properties": {
                    "fieldValues": {
                        "type": "array",
                        "description": "Fields of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractFieldValue"
                        }
                    },
                    "tableValues": {
                        "type": "array",
                        "description": "Fields of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/TableFieldValue"
                        }
                    }
                },
                "description": "Update fields of a tracker item"
            },
            "UpdateTrackerItemFieldWithItemId": {
                "type": "object",
                "properties": {
                    "fieldValues": {
                        "type": "array",
                        "description": "Fields of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/AbstractFieldValue"
                        }
                    },
                    "tableValues": {
                        "type": "array",
                        "description": "Fields of a tracker item",
                        "items": {
                            "$ref": "#/components/schemas/TableFieldValue"
                        }
                    },
                    "itemId": {
                        "type": "integer",
                        "description": "Id of a tracker item",
                        "format": "int32"
                    }
                },
                "description": "Update fields of a tracker item and provide the itemId as well"
            },
            "UpdateTrackerItemTableField": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "array",
                        "description": "Table rows of a tracker table item",
                        "items": {
                            "type": "array",
                            "description": "Table rows of a tracker table item",
                            "items": {
                                "$ref": "#/components/schemas/AbstractFieldValue"
                            }
                        }
                    }
                }
            },
            "UploadAttachment": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "type": "string",
                        "description": "Attachments of a comment",
                        "format": "binary"
                    }
                }
            },
            "UpstreamTrackerItemReference": {
                "type": "object",
                "description": "Reference to other tracker item",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractTrackerItemReference"
                    }
                ]
            },
            "UrlField": {
                "type": "object",
                "description": "Url field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    }
                ]
            },
            "UrlFieldValue": {
                "required": [
                    "type"
                ],
                "type": "object",
                "description": "Value container of an url field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "Value of the field"
                            }
                        }
                    }
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name of a user"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of a user"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of a user"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of a user"
                    },
                    "company": {
                        "type": "string",
                        "description": "Company of a user"
                    },
                    "address": {
                        "type": "string",
                        "description": "Address of a user"
                    },
                    "zip": {
                        "type": "string",
                        "description": "Zip of a user"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of a user"
                    },
                    "state": {
                        "type": "string",
                        "description": "State / providence of a user"
                    },
                    "country": {
                        "maxLength": 2,
                        "type": "string",
                        "description": "Country of a user in ISO 3166-1 alpha-2 format"
                    },
                    "dateFormat": {
                        "type": "string",
                        "description": "Date format of a user"
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "Time zone of a user",
                        "example": "America/New_York"
                    },
                    "language": {
                        "maxLength": 2,
                        "type": "string",
                        "description": "Language of a user in ISO 639-1 format"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone number of a user"
                    },
                    "skills": {
                        "type": "string",
                        "description": "Skills of a user"
                    },
                    "registryDate": {
                        "type": "string",
                        "description": "Registration date of a user",
                        "format": "date-time"
                    },
                    "lastLoginDate": {
                        "type": "string",
                        "description": "Last login date of a user",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of a user",
                        "enum": [
                            "ACTIVATED",
                            "DISABLED",
                            "INACTIVATION"
                        ]
                    }
                },
                "description": "Properties of a codebeamer user"
            },
            "UserChoiceField": {
                "type": "object",
                "description": "User item type choice field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "multipleValues": {
                                "type": "boolean",
                                "description": "Multiple values state of a field"
                            },
                            "referenceType": {
                                "type": "string",
                                "description": "Type of the contained references"
                            }
                        }
                    }
                ]
            },
            "UserFilteringRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the user",
                        "example": "John Doe"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the user",
                        "example": "Doe"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name of the user",
                        "example": "John"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the user",
                        "example": "john.doe@codebeamer.com"
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "Id of the project where the user is a member",
                        "format": "int32"
                    },
                    "userStatus": {
                        "type": "string",
                        "description": "Status of the user",
                        "enum": [
                            "ACTIVATED",
                            "DISABLED",
                            "INACTIVATION"
                        ]
                    }
                }
            },
            "UserGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of a user group"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    }
                },
                "description": "Group of a codebeamer user"
            },
            "UserGroupReference": {
                "type": "object",
                "description": "Reference to a user group",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "UserReference": {
                "type": "object",
                "description": "Reference to a user",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "description": "Email of a referenced user"
                            }
                        }
                    }
                ]
            },
            "UserReferenceSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "users": {
                        "type": "array",
                        "description": "Found users",
                        "items": {
                            "$ref": "#/components/schemas/UserReference"
                        }
                    }
                },
                "description": "Paginated search result of users"
            },
            "UserSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "users": {
                        "type": "array",
                        "description": "Found users",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "description": "Paginated search result of users"
            },
            "WikiOutlineSearchResult": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Index of the page",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Size of the found page",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Number of matched tracker items by the search criteria",
                        "format": "int32"
                    },
                    "outlineWikiPages": {
                        "type": "array",
                        "description": "Found outline wiki pages",
                        "items": {
                            "$ref": "#/components/schemas/OutlineWiki"
                        }
                    }
                },
                "description": "Paginated search result of outline wiki pages"
            },
            "WikiPage": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectReference"
                    },
                    "markup": {
                        "type": "string",
                        "description": "Content markup of the wiki page"
                    },
                    "comments": {
                        "type": "array",
                        "description": "Comments/attachments associated with the wiki page",
                        "items": {
                            "$ref": "#/components/schemas/AttachmentReference"
                        }
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version of the wiki page",
                        "format": "int32"
                    },
                    "changeComment": {
                        "type": "string",
                        "description": "Summary of the changes in this wiki page version"
                    },
                    "childPages": {
                        "type": "array",
                        "description": "Child pages of the current Wiki page",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/WikiPageReference"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date when the entity was created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "The date when the entity was modified",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/UserReference"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                },
                "description": "Properties of a wiki page"
            },
            "WikiPageReference": {
                "type": "object",
                "description": "Reference to a wiki page",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractReference"
                    }
                ]
            },
            "WikiRenderRequest": {
                "required": [
                    "markup"
                ],
                "type": "object",
                "properties": {
                    "contextId": {
                        "type": "integer",
                        "description": "Id of the entity used as rendering context",
                        "format": "int32"
                    },
                    "contextVersion": {
                        "type": "integer",
                        "description": "Version of the entity used as rendering context",
                        "format": "int32"
                    },
                    "renderingContextType": {
                        "type": "string",
                        "description": "Type of the entity used as rendering context",
                        "enum": [
                            "TRACKER_ITEM",
                            "WIKI"
                        ]
                    },
                    "markup": {
                        "type": "string",
                        "description": "Wiki markup to render as HTML",
                        "example": "Hello __World__!"
                    }
                },
                "description": "Request model to render a wiki page in a specific context"
            },
            "WikiTextField": {
                "type": "object",
                "description": "Wiki text field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractField"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "min": {
                                "type": "integer",
                                "description": "Minimum length of value of a field",
                                "format": "int32"
                            },
                            "max": {
                                "type": "integer",
                                "description": "Max length of value of a field",
                                "format": "int32"
                            }
                        }
                    }
                ]
            },
            "WikiTextFieldValue": {
                "required": [
                    "type",
                    "value"
                ],
                "type": "object",
                "description": "Value container of a wiki text field",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractFieldValue"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "Wiki text value"
                            }
                        }
                    }
                ]
            },
            "WorkflowTransition": {
                "required": [
                    "toStatus"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Id of the entity",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the entity"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity"
                    },
                    "descriptionFormat": {
                        "type": "string",
                        "description": "Description format of the entity",
                        "enum": [
                            "PlainText",
                            "Html",
                            "Wiki"
                        ]
                    },
                    "fromStatus": {
                        "$ref": "#/components/schemas/ChoiceOptionReference"
                    },
                    "toStatus": {
                        "$ref": "#/components/schemas/ChoiceOptionReference"
                    },
                    "hidden": {
                        "type": "boolean",
                        "description": "Indicator if the transition is hidden"
                    },
                    "permissions": {
                        "type": "array",
                        "description": "Access permissions of the transition",
                        "items": {
                            "$ref": "#/components/schemas/AccessPermission"
                        }
                    }
                },
                "description": "A transition in the workflow"
            }
        },
        "securitySchemes": {
            "BasicAuth": {
                "type": "http",
                "description": "Please use your username and password",
                "scheme": "basic"
            },
            "BearerAuth": {
                "type": "http",
                "description": "Please login using your openId token",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            },
            "ApiKeyAuth": {
                "type": "apiKey",
                "description": "Please login using your codebeamer token",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}
